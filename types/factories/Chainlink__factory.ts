/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";

import type { Chainlink } from "../Chainlink";

export class Chainlink__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    _asset: string,
    _weth: string,
    _aggregator: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Chainlink> {
    return super.deploy(
      _asset,
      _weth,
      _aggregator,
      overrides || {}
    ) as Promise<Chainlink>;
  }
  getDeployTransaction(
    _asset: string,
    _weth: string,
    _aggregator: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _asset,
      _weth,
      _aggregator,
      overrides || {}
    );
  }
  attach(address: string): Chainlink {
    return super.attach(address) as Chainlink;
  }
  connect(signer: Signer): Chainlink__factory {
    return super.connect(signer) as Chainlink__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Chainlink {
    return new Contract(address, _abi, signerOrProvider) as Chainlink;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_asset",
        type: "address",
      },
      {
        internalType: "address",
        name: "_weth",
        type: "address",
      },
      {
        internalType: "contract IChainlinkAggregator",
        name: "_aggregator",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "asset",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newPrice",
        type: "uint256",
      },
    ],
    name: "PriceUpdated",
    type: "event",
  },
  {
    inputs: [],
    name: "WETH",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "aggregator",
    outputs: [
      {
        internalType: "contract IChainlinkAggregator",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "asset",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getPriceInETH",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getPriceInUSD",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "viewPriceInETH",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "viewPriceInUSD",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60e060405234801561001057600080fd5b506040516104ea3803806104ea83398181016040528101906100329190610109565b8273ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1660601b815250508173ffffffffffffffffffffffffffffffffffffffff1660a08173ffffffffffffffffffffffffffffffffffffffff1660601b815250508073ffffffffffffffffffffffffffffffffffffffff1660c08173ffffffffffffffffffffffffffffffffffffffff1660601b815250505050506101ca565b6000815190506100ee8161019c565b92915050565b600081519050610103816101b3565b92915050565b60008060006060848603121561011e57600080fd5b600061012c868287016100df565b935050602061013d868287016100df565b925050604061014e868287016100f4565b9150509250925092565b60006101638261017c565b9050919050565b600061017582610158565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6101a581610158565b81146101b057600080fd5b50565b6101bc8161016a565b81146101c757600080fd5b50565b60805160601c60a05160601c60c05160601c6102e86102026000396000610156015260006101a80152600061017f01526102e86000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c806378ad41751161005b57806378ad4175146100dc578063ad5c4648146100fa578063e1aa603614610118578063f55fa17f146101365761007d565b8063245a7bfc146100825780632ba59851146100a057806338d52e0f146100be575b600080fd5b61008a610154565b604051610097919061021c565b60405180910390f35b6100a8610178565b6040516100b59190610237565b60405180910390f35b6100c661017d565b6040516100d39190610201565b60405180910390f35b6100e46101a1565b6040516100f19190610237565b60405180910390f35b6101026101a6565b60405161010f9190610201565b60405180910390f35b6101206101ca565b60405161012d9190610237565b60405180910390f35b61013e6101cf565b60405161014b9190610237565b60405180910390f35b7f000000000000000000000000000000000000000000000000000000000000000081565b600090565b7f000000000000000000000000000000000000000000000000000000000000000081565b600090565b7f000000000000000000000000000000000000000000000000000000000000000081565b600090565b600090565b6101dd81610252565b82525050565b6101ec8161028e565b82525050565b6101fb81610284565b82525050565b600060208201905061021660008301846101d4565b92915050565b600060208201905061023160008301846101e3565b92915050565b600060208201905061024c60008301846101f2565b92915050565b600061025d82610264565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000610299826102a0565b9050919050565b60006102ab82610264565b905091905056fea26469706673582212200a263f48779e29cabf66c1ba9d42fac793a00be09fef0de8112f62e5a53d249164736f6c63430008010033";
