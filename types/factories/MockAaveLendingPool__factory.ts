/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Signer,
  BigNumberish,
  Contract,
  ContractFactory,
  Overrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";

import type { MockAaveLendingPool } from "../MockAaveLendingPool";

export class MockAaveLendingPool__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    _premium: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<MockAaveLendingPool> {
    return super.deploy(
      _premium,
      overrides || {}
    ) as Promise<MockAaveLendingPool>;
  }
  getDeployTransaction(
    _premium: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_premium, overrides || {});
  }
  attach(address: string): MockAaveLendingPool {
    return super.attach(address) as MockAaveLendingPool;
  }
  connect(signer: Signer): MockAaveLendingPool__factory {
    return super.connect(signer) as MockAaveLendingPool__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MockAaveLendingPool {
    return new Contract(address, _abi, signerOrProvider) as MockAaveLendingPool;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_premium",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiverAddress",
        type: "address",
      },
      {
        internalType: "address[]",
        name: "assets",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "modes",
        type: "uint256[]",
      },
      {
        internalType: "address",
        name: "onBehalfOf",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "params",
        type: "bytes",
      },
      {
        internalType: "uint16",
        name: "referralCode",
        type: "uint16",
      },
    ],
    name: "flashLoan",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "premium",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5060405161067738038061067783398101604081905261002f91610037565b60005561004f565b600060208284031215610048578081fd5b5051919050565b6106198061005e6000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c8063ab9c4b5d1461003b578063e0a73a9314610050575b600080fd5b61004e61004936600461032e565b61006e565b005b610058610250565b60405161006591906105da565b60405180910390f35b8989600081811061008f57634e487b7160e01b600052603260045260246000fd5b90506020020160208101906100a4919061030d565b6001600160a01b03166340c10f198c8a8a60008181106100d457634e487b7160e01b600052603260045260246000fd5b905060200201356040518363ffffffff1660e01b81526004016100f89291906104b4565b600060405180830381600087803b15801561011257600080fd5b505af1158015610126573d6000803e3d6000fd5b5060009250600191506101369050565b60405190808252806020026020018201604052801561015f578160200160208202803683370190505b5090506000548160008151811061018657634e487b7160e01b600052603260045260246000fd5b6020908102919091010152604051632483d72160e21b81526001600160a01b038d169063920f5c84906101cb908e908e908e908e90889033908d908d906004016104cd565b602060405180830381600087803b1580156101e557600080fd5b505af11580156101f9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061021d9190610423565b6102425760405162461bcd60e51b8152600401610239906105a3565b60405180910390fd5b505050505050505050505050565b60005481565b80356001600160a01b038116811461026d57600080fd5b919050565b60008083601f840112610283578182fd5b50813567ffffffffffffffff81111561029a578182fd5b60208301915083602080830285010111156102b457600080fd5b9250929050565b60008083601f8401126102cc578182fd5b50813567ffffffffffffffff8111156102e3578182fd5b6020830191508360208285010111156102b457600080fd5b803561ffff8116811461026d57600080fd5b60006020828403121561031e578081fd5b61032782610256565b9392505050565b600080600080600080600080600080600060e08c8e03121561034e578687fd5b6103578c610256565b9a5067ffffffffffffffff8060208e01351115610372578788fd5b6103828e60208f01358f01610272565b909b50995060408d0135811015610397578788fd5b6103a78e60408f01358f01610272565b909950975060608d01358110156103bc578687fd5b6103cc8e60608f01358f01610272565b90975095506103dd60808e01610256565b94508060a08e013511156103ef578384fd5b506104008d60a08e01358e016102bb565b909350915061041160c08d016102fb565b90509295989b509295989b9093969950565b600060208284031215610434578081fd5b81518015158114610327578182fd5b6001600160a01b03169052565b6000815180845260208085019450808401835b8381101561047f57815187529582019590820190600101610463565b509495945050505050565b60008284528282602086013780602084860101526020601f19601f85011685010190509392505050565b6001600160a01b03929092168252602082015260400190565b60a0808252810188905260008960c08301825b8b81101561050e576001600160a01b036104f984610256565b168252602092830192909101906001016104e0565b5083810360208501528881527f07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff891115610546578283fd5b602089029150818a602083013701602081810183815284830390910160408501526105718189610450565b9150506105816060840187610443565b828103608084015261059481858761048a565b9b9a5050505050505050505050565b60208082526010908201527f666c6173686c6f616e206661696c656400000000000000000000000000000000604082015260600190565b9081526020019056fea264697066735822122060f5d82d8b93ebe0287784b34c7bacee817d43b4b897519fb00d3917c2373d7e64736f6c63430008010033";
