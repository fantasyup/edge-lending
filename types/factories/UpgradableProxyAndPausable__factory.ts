/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";

import type { UpgradableProxyAndPausable } from "../UpgradableProxyAndPausable";

export class UpgradableProxyAndPausable__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<UpgradableProxyAndPausable> {
    return super.deploy(overrides || {}) as Promise<UpgradableProxyAndPausable>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): UpgradableProxyAndPausable {
    return super.attach(address) as UpgradableProxyAndPausable;
  }
  connect(signer: Signer): UpgradableProxyAndPausable__factory {
    return super.connect(signer) as UpgradableProxyAndPausable__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): UpgradableProxyAndPausable {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as UpgradableProxyAndPausable;
  }
}

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    stateMutability: "payable",
    type: "fallback",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "initialAddress",
        type: "address",
      },
    ],
    name: "initializeProxy",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506000805460ff191690556102768061002a6000396000f3fe60806040526004361061002d5760003560e01c80634a0687ef146100445780635c975abb146100645761003c565b3661003c5761003a61008f565b005b61003a61008f565b34801561005057600080fd5b5061003a61005f366004610199565b6100a9565b34801561007057600080fd5b50610079610114565b60405161008691906101c7565b60405180910390f35b6100976100a7565b6100a76100a261011d565b61012c565b565b6001600160a01b0381166100d85760405162461bcd60e51b81526004016100cf90610209565b60405180910390fd5b60006100e2610150565b6001600160a01b0316146101085760405162461bcd60e51b81526004016100cf906101d2565b61011181610175565b50565b60005460ff1690565b6000610127610150565b905090565b3660008037600080366000845af43d6000803e80801561014b573d6000f35b3d6000fd5b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5490565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc55565b6000602082840312156101aa578081fd5b81356001600160a01b03811681146101c0578182fd5b9392505050565b901515815260200190565b6020808252601e908201527f5555505350726f78793a20616c726561647920696e697469616c697a65640000604082015260600190565b60208082526017908201527f5555505350726f78793a207a65726f206164647265737300000000000000000060408201526060019056fea264697066735822122012e2ae8f43380acef0d55ac022db86657bcbcc411d25307020db1aa1934fd3a164736f6c63430008010033";
