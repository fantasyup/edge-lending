/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";

import type { UpgradableProxyAndPausable } from "../UpgradableProxyAndPausable";

export class UpgradableProxyAndPausable__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<UpgradableProxyAndPausable> {
    return super.deploy(overrides || {}) as Promise<UpgradableProxyAndPausable>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): UpgradableProxyAndPausable {
    return super.attach(address) as UpgradableProxyAndPausable;
  }
  connect(signer: Signer): UpgradableProxyAndPausable__factory {
    return super.connect(signer) as UpgradableProxyAndPausable__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): UpgradableProxyAndPausable {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as UpgradableProxyAndPausable;
  }
}

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    stateMutability: "payable",
    type: "fallback",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "c__0xc63f9b66",
        type: "bytes32",
      },
    ],
    name: "c_0xc63f9b66",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "c__0xf938a198",
        type: "bytes32",
      },
    ],
    name: "c_0xf938a198",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "initialAddress",
        type: "address",
      },
    ],
    name: "initializeProxy",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5060008060006101000a81548160ff0219169083151502179055506108068061003a6000396000f3fe6080604052600436106100435760003560e01c80634a0687ef1461005c5780634efb945f1461008557806350b1ebda146100ae5780635c975abb146100d757610052565b3661005257610050610102565b005b61005a610102565b005b34801561006857600080fd5b50610083600480360381019061007e91906105f5565b61011c565b005b34801561009157600080fd5b506100ac60048036038101906100a7919061061e565b6103f2565b005b3480156100ba57600080fd5b506100d560048036038101906100d0919061061e565b6103f5565b005b3480156100e357600080fd5b506100ec6103f8565b6040516100f9919061069c565b60405180910390f35b61010a61040e565b61011a610115610410565b6104a3565b565b6101487fec76c845eb99158e95c2a4351db54beda967cac5951df59a4552b5766faf23e660001b6103f2565b6101747ff6a544f324d06f637955108fd56b64f8f38b94e35a8c5b58e86b994b1fbc475360001b6103f2565b6101a07f4e584d8ef5863a260c4ff049b16b4d69638c6e04bf255f86598f199f3a4dbc2460001b6103f2565b6101cc7f0a5ceaa49cd0000190217c485982eb5aece21ab8b46078d6e832682dda34eba560001b6103f2565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561023c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610233906106d7565b60405180910390fd5b6102687fd70c377b2f9120bc8da8ca16cb08a284f31f889048e4ccec8ab029a39092480060001b6103f2565b6102947f52782af1633904b7f58e73bd75dc113bcb043a6e8742ec67b6a8a647bc6b67a660001b6103f2565b6102c07f8639d9252c4c485cc37e6037a12798726a3e7cb9613a90cf934645738988029c60001b6103f2565b6102ec7f1920c906b740c3609e2182c5a017e131b12681848037db4cf3014ecd71487f8b60001b6103f2565b600073ffffffffffffffffffffffffffffffffffffffff1661030c6104c9565b73ffffffffffffffffffffffffffffffffffffffff1614610362576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610359906106b7565b60405180910390fd5b61038e7f945d6c8d391fe3ad557ab2c9f42524905147e7747c27650aede77b69c28560e260001b6103f2565b6103ba7f8bafeff8ab6b0fe1efc7925728e505e84ee7085cfc6b700e266be872f5b5451d60001b6103f2565b6103e67f1cc5909dbf05964db7c6df41be966741be9136477e4b1958b6999ad4fa1810ef60001b6103f2565b6103ef8161054a565b50565b50565b50565b60008060009054906101000a900460ff16905090565b565b600061043e7fc6549fb8906f4cf5d3d8b5b7bf08e797130c73347a84fe065c858742ec8dde2d60001b6103f2565b61046a7f15d9ba1748f9a0cbe5317f9539f0c3eba3bf3b11b54a710b2f26ade6a2987e7c60001b6103f2565b6104967f3ad4a1917bb976b2084762557be8bf265c1331e74db79b9cfa26bfecc40fdcf460001b6103f2565b61049e6104c9565b905090565b3660008037600080366000845af43d6000803e80600081146104c4573d6000f35b3d6000fd5b60006104f77f305e4729da742d98e37aad089b493a750cd711c6ea43646fa6e30f67868be53260001b6105c8565b6105237f8a4887838e1c7753c2a7924b6211d37670c133a38d4f7a87c38fb2ee20c01c7b60001b6105c8565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc54905090565b6105767f5bbf6d8633601fa9642518f32635abba9e55b05a17fcfa4665ecf48132f4e09760001b6105c8565b6105a27ff3beb3ae7e4248068e4d942a1e45d991bc51bfabf8f58d75a58c13f1531eb8c460001b6105c8565b807f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5550565b50565b6000813590506105da816107a2565b92915050565b6000813590506105ef816107b9565b92915050565b60006020828403121561060757600080fd5b6000610615848285016105cb565b91505092915050565b60006020828403121561063057600080fd5b600061063e848285016105e0565b91505092915050565b6106508161071a565b82525050565b6000610663601e836106f7565b915061066e82610750565b602082019050919050565b60006106866017836106f7565b915061069182610779565b602082019050919050565b60006020820190506106b16000830184610647565b92915050565b600060208201905081810360008301526106d081610656565b9050919050565b600060208201905081810360008301526106f081610679565b9050919050565b600082825260208201905092915050565b600061071382610730565b9050919050565b60008115159050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b7f5555505350726f78793a20616c726561647920696e697469616c697a65640000600082015250565b7f5555505350726f78793a207a65726f2061646472657373000000000000000000600082015250565b6107ab81610708565b81146107b657600080fd5b50565b6107c281610726565b81146107cd57600080fd5b5056fea26469706673582212208fb0d940125da64e67af8d90982fe10d2d2d7337aee661f0e32cc184e48bc88264736f6c63430008010033";
