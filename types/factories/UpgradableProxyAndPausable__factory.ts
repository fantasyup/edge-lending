/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";

import type { UpgradableProxyAndPausable } from "../UpgradableProxyAndPausable";

export class UpgradableProxyAndPausable__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<UpgradableProxyAndPausable> {
    return super.deploy(overrides || {}) as Promise<UpgradableProxyAndPausable>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): UpgradableProxyAndPausable {
    return super.attach(address) as UpgradableProxyAndPausable;
  }
  connect(signer: Signer): UpgradableProxyAndPausable__factory {
    return super.connect(signer) as UpgradableProxyAndPausable__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): UpgradableProxyAndPausable {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as UpgradableProxyAndPausable;
  }
}

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    stateMutability: "payable",
    type: "fallback",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "initialAddress",
        type: "address",
      },
    ],
    name: "initializeProxy",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5060008060006101000a81548160ff02191690831515021790555061041e8061003a6000396000f3fe60806040526004361061002d5760003560e01c80634a0687ef146100465780635c975abb1461006f5761003c565b3661003c5761003a61009a565b005b61004461009a565b005b34801561005257600080fd5b5061006d60048036038101906100689190610257565b6100b4565b005b34801561007b57600080fd5b506100846101a6565b60405161009191906102d5565b60405180910390f35b6100a26101bc565b6100b26100ad6101be565b6101cd565b565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610124576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161011b90610310565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff166101446101f3565b73ffffffffffffffffffffffffffffffffffffffff161461019a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610191906102f0565b60405180910390fd5b6101a38161021c565b50565b60008060009054906101000a900460ff16905090565b565b60006101c86101f3565b905090565b3660008037600080366000845af43d6000803e80600081146101ee573d6000f35b3d6000fd5b60007f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc54905090565b807f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5550565b600081359050610251816103d1565b92915050565b60006020828403121561026957600080fd5b600061027784828501610242565b91505092915050565b61028981610353565b82525050565b600061029c601e83610330565b91506102a78261037f565b602082019050919050565b60006102bf601783610330565b91506102ca826103a8565b602082019050919050565b60006020820190506102ea6000830184610280565b92915050565b600060208201905081810360008301526103098161028f565b9050919050565b60006020820190508181036000830152610329816102b2565b9050919050565b600082825260208201905092915050565b600061034c8261035f565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b7f5555505350726f78793a20616c726561647920696e697469616c697a65640000600082015250565b7f5555505350726f78793a207a65726f2061646472657373000000000000000000600082015250565b6103da81610341565b81146103e557600080fd5b5056fea26469706673582212205caefd217edec1f36c96813468337fc70fa0d3807097684b70c6bb1c659ae0b864736f6c63430008010033";
