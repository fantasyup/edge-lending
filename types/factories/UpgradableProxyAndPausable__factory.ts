/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";

import type { UpgradableProxyAndPausable } from "../UpgradableProxyAndPausable";

export class UpgradableProxyAndPausable__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<UpgradableProxyAndPausable> {
    return super.deploy(overrides || {}) as Promise<UpgradableProxyAndPausable>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): UpgradableProxyAndPausable {
    return super.attach(address) as UpgradableProxyAndPausable;
  }
  connect(signer: Signer): UpgradableProxyAndPausable__factory {
    return super.connect(signer) as UpgradableProxyAndPausable__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): UpgradableProxyAndPausable {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as UpgradableProxyAndPausable;
  }
}

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    stateMutability: "payable",
    type: "fallback",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "c__0xc63f9b66",
        type: "bytes32",
      },
    ],
    name: "c_0xc63f9b66",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "c__0xf938a198",
        type: "bytes32",
      },
    ],
    name: "c_0xf938a198",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "initialAddress",
        type: "address",
      },
    ],
    name: "initializeProxy",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5060008060006101000a81548160ff0219169083151502179055506108068061003a6000396000f3fe6080604052600436106100435760003560e01c80634a0687ef1461005c5780634efb945f1461008557806350b1ebda146100ae5780635c975abb146100d757610052565b3661005257610050610102565b005b61005a610102565b005b34801561006857600080fd5b50610083600480360381019061007e91906105f5565b61011c565b005b34801561009157600080fd5b506100ac60048036038101906100a7919061061e565b6103f2565b005b3480156100ba57600080fd5b506100d560048036038101906100d0919061061e565b6103f5565b005b3480156100e357600080fd5b506100ec6103f8565b6040516100f9919061069c565b60405180910390f35b61010a61040e565b61011a610115610410565b6104a3565b565b6101487f2f063b905d3e3363043844a1a0ee13575395ba6d009b8e3678e11bc1ad463ff260001b6103f2565b6101747fbb6e642790fb858f17ba4c4ac6c612f6b6daca1871536a40100d9c56c14883ec60001b6103f2565b6101a07f90b0af89c1a2bfd9ec1940f03ff15dd8882956b92bd19e5dae877738bd77a11c60001b6103f2565b6101cc7f6cbd200e035ccfe5d86d09de067913bb035e5d6ef5c827c80de3d5601761f63160001b6103f2565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561023c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610233906106d7565b60405180910390fd5b6102687f4a3cef2c33966d54a5abcefe7bf5daad98abbf21d81f783f151df8724a6cedda60001b6103f2565b6102947ffad31f6d25ebc502ed9828b35cb68ae9c6c48612d5786a0e4daec2cab58f43a560001b6103f2565b6102c07f25b1f8e27e8a8e0fe3302c0ccb269fc2b0fb81289a382f4c94159f3f21f215d260001b6103f2565b6102ec7ff05d5e9cc00fd1a04403b7755f62f234592b3e9b210a4fa8bc9ad512b213e94a60001b6103f2565b600073ffffffffffffffffffffffffffffffffffffffff1661030c6104c9565b73ffffffffffffffffffffffffffffffffffffffff1614610362576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610359906106b7565b60405180910390fd5b61038e7f92082e5d50e72eacede470a4535f8967625e8fff5193b0824b0f0d01fef1f3e760001b6103f2565b6103ba7f6c41ca3a4dcb145021630a3b0ee119b485be0c3c6b8e403dffe56835dd377f9e60001b6103f2565b6103e67f7e7a686388f4bb63e937e08eb6967d3da675253fc0c224c86441c644147d42cc60001b6103f2565b6103ef8161054a565b50565b50565b50565b60008060009054906101000a900460ff16905090565b565b600061043e7f1b376c13a2d4daa0bca15935daf8cbb2fafcab47fd4b9e3a36c1a9dbcab7ea6660001b6103f2565b61046a7fd215ab37f5fae405e32b1bc0bd8808512e566828e9e096ced778d2601c65e50760001b6103f2565b6104967f285027fc71290905ac27290e69cb91ad9a267405bfc73b1983c92d517e5c0adb60001b6103f2565b61049e6104c9565b905090565b3660008037600080366000845af43d6000803e80600081146104c4573d6000f35b3d6000fd5b60006104f77f57225dd7cadf0f935f44c4bbb4eb9b3ae4614f5404df345aa8a3910ef0e08d1860001b6105c8565b6105237fbff5e70f630bf22b335fe942b8c3b6ccb320a3f9f83dbf8649149ca95237442460001b6105c8565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc54905090565b6105767f0734487c715310cadda4ba18c25928e81cebec2fe6461a8748ced5a3f889447e60001b6105c8565b6105a27f0e4e78a2c4e835c97e8a076a7ca6b2fb75ed3155c53a2f93113f62fcf984e4b260001b6105c8565b807f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5550565b50565b6000813590506105da816107a2565b92915050565b6000813590506105ef816107b9565b92915050565b60006020828403121561060757600080fd5b6000610615848285016105cb565b91505092915050565b60006020828403121561063057600080fd5b600061063e848285016105e0565b91505092915050565b6106508161071a565b82525050565b6000610663601e836106f7565b915061066e82610750565b602082019050919050565b60006106866017836106f7565b915061069182610779565b602082019050919050565b60006020820190506106b16000830184610647565b92915050565b600060208201905081810360008301526106d081610656565b9050919050565b600060208201905081810360008301526106f081610679565b9050919050565b600082825260208201905092915050565b600061071382610730565b9050919050565b60008115159050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b7f5555505350726f78793a20616c726561647920696e697469616c697a65640000600082015250565b7f5555505350726f78793a207a65726f2061646472657373000000000000000000600082015250565b6107ab81610708565b81146107b657600080fd5b50565b6107c281610726565b81146107cd57600080fd5b5056fea2646970667358221220d9b62457f14c0fcdcd6208063494b3c5702e7f25183151161fe7e5f2cb9074b964736f6c63430008010033";
