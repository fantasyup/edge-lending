/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";

import type { UUPSProxy } from "../UUPSProxy";

export class UUPSProxy__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<UUPSProxy> {
    return super.deploy(overrides || {}) as Promise<UUPSProxy>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): UUPSProxy {
    return super.attach(address) as UUPSProxy;
  }
  connect(signer: Signer): UUPSProxy__factory {
    return super.connect(signer) as UUPSProxy__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): UUPSProxy {
    return new Contract(address, _abi, signerOrProvider) as UUPSProxy;
  }
}

const _abi = [
  {
    stateMutability: "payable",
    type: "fallback",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "c__0xc63f9b66",
        type: "bytes32",
      },
    ],
    name: "c_0xc63f9b66",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "initialAddress",
        type: "address",
      },
    ],
    name: "initializeProxy",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061074d806100206000396000f3fe60806040526004361061002d5760003560e01c80634a0687ef146100465780634efb945f1461006f5761003c565b3661003c5761003a610098565b005b610044610098565b005b34801561005257600080fd5b5061006d60048036038101906100689190610572565b6100b2565b005b34801561007b57600080fd5b506100966004803603810190610091919061059b565b610388565b005b6100a061038b565b6100b06100ab61038d565b610420565b565b6100de7f77ba71d2edc010e77cb07c63711d6a2f8955a2600a003a6e167614d5dfcabbe560001b610388565b61010a7fff87c6e2c8847592008c873fcf27b61658143e4463026209cf110ce4ef2a295960001b610388565b6101367ffe81a399660f98ed09090cb688ec7b1cb121ec29b2ea926842cdcb9095c7372960001b610388565b6101627f5228792f31b6666beb0f41083fa73b8e1a13695be6f4b838e59bc555857fa75260001b610388565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156101d2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101c99061062a565b60405180910390fd5b6101fe7f7f0cc1ad99496162bcde265fcbc3a149265355d205c912dddf86e21b0b2352e960001b610388565b61022a7f3489c58ade827b95978cd51a43e16bda7991437c24b8193fb08b370c31dc2e4d60001b610388565b6102567f85f7ba7efa9a5308ecc8d2c3f4bd900bea57a896929fd95793a87d15f1e8d79860001b610388565b6102827f179cdd2a149e5cc807b2e6c3f62d74e88778ff096c04ea142caa970f111d2bc060001b610388565b600073ffffffffffffffffffffffffffffffffffffffff166102a2610446565b73ffffffffffffffffffffffffffffffffffffffff16146102f8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102ef9061060a565b60405180910390fd5b6103247fb84c59a809dc0e38b62721b5f837e94ad591848150dea98c4a7204a8a29cd0aa60001b610388565b6103507f2991f0b5f0f9145b12909546eeafa75ccbc41d0377be18c8a43e1e325ac98f9260001b610388565b61037c7f8649f2e34cac9cfc470a7d971b61b4ebb64ec5f7413728c17052583fc46cb73360001b610388565b610385816104c7565b50565b50565b565b60006103bb7f7c5327d4b77b218f600813e2b7468c29c56901119885e9437f0a4a4002064dcc60001b610388565b6103e77f2753586ba233afb8d9f2fa7fe9805b6ab809756f05a44eddeccccadf6058dc6760001b610388565b6104137f4806ed5189d2c86219e3112595b8b37c2cf94f7e4de5c49b007eb6a75c08755260001b610388565b61041b610446565b905090565b3660008037600080366000845af43d6000803e8060008114610441573d6000f35b3d6000fd5b60006104747faebf57411e15ce4c7e5bd228b61597a1e9b4e44016b86479800dcdafcbcd769960001b610545565b6104a07f271987faf407395520c150a08cc92dea6edd740835a138e13658190436d9d27260001b610545565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc54905090565b6104f37f6756dada430ca691f15751532a97a06b5af6a4461ecdea9be0f8ff3df0c92bb460001b610545565b61051f7f5da868f106a4c8fba502ca4480740233a4dbc3fdc9cf7112acadc873dd12613e60001b610545565b807f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5550565b50565b600081359050610557816106e9565b92915050565b60008135905061056c81610700565b92915050565b60006020828403121561058457600080fd5b600061059284828501610548565b91505092915050565b6000602082840312156105ad57600080fd5b60006105bb8482850161055d565b91505092915050565b60006105d1601e8361064a565b91506105dc82610697565b602082019050919050565b60006105f460178361064a565b91506105ff826106c0565b602082019050919050565b60006020820190508181036000830152610623816105c4565b9050919050565b60006020820190508181036000830152610643816105e7565b9050919050565b600082825260208201905092915050565b600061066682610677565b9050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b7f5555505350726f78793a20616c726561647920696e697469616c697a65640000600082015250565b7f5555505350726f78793a207a65726f2061646472657373000000000000000000600082015250565b6106f28161065b565b81146106fd57600080fd5b50565b6107098161066d565b811461071457600080fd5b5056fea2646970667358221220c87c77802ff4542fef12b2957cd4a15cb340965b87766c4664883f6d31b21c8964736f6c63430008010033";
