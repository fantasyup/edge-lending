/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";

import type { UUPSProxy } from "../UUPSProxy";

export class UUPSProxy__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<UUPSProxy> {
    return super.deploy(overrides || {}) as Promise<UUPSProxy>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): UUPSProxy {
    return super.attach(address) as UUPSProxy;
  }
  connect(signer: Signer): UUPSProxy__factory {
    return super.connect(signer) as UUPSProxy__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): UUPSProxy {
    return new Contract(address, _abi, signerOrProvider) as UUPSProxy;
  }
}

const _abi = [
  {
    stateMutability: "payable",
    type: "fallback",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "c__0xc63f9b66",
        type: "bytes32",
      },
    ],
    name: "c_0xc63f9b66",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "initialAddress",
        type: "address",
      },
    ],
    name: "initializeProxy",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061074d806100206000396000f3fe60806040526004361061002d5760003560e01c80634a0687ef146100465780634efb945f1461006f5761003c565b3661003c5761003a610098565b005b610044610098565b005b34801561005257600080fd5b5061006d60048036038101906100689190610572565b6100b2565b005b34801561007b57600080fd5b506100966004803603810190610091919061059b565b610388565b005b6100a061038b565b6100b06100ab61038d565b610420565b565b6100de7f359f4caead21c0f65c38760aa7907741cb30a65abd7e1212fac85a3f5fee589760001b610388565b61010a7f4428954609349e183621d8c2a5c3b46b6d111092190390e705bab0cfc71d1cd060001b610388565b6101367f01b2beba970c7453a4b0aa33568ec9325a6fcf4f73dec8f135ffc9490087fede60001b610388565b6101627fea07f18fe2405e8aeda0e0efd5f44de12c2f14d68998124a840e51dba8e3ecd760001b610388565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156101d2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101c99061062a565b60405180910390fd5b6101fe7f1ab01e938fe7c01ca0240d389fa7ae3586bbfc673913f7af49cf3e1700bacd9c60001b610388565b61022a7f31cd51505b645e6783cdf78e88068951928e37e0fe6a9cdcff968a5b1576374060001b610388565b6102567f77ba71d2edc010e77cb07c63711d6a2f8955a2600a003a6e167614d5dfcabbe560001b610388565b6102827fff87c6e2c8847592008c873fcf27b61658143e4463026209cf110ce4ef2a295960001b610388565b600073ffffffffffffffffffffffffffffffffffffffff166102a2610446565b73ffffffffffffffffffffffffffffffffffffffff16146102f8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102ef9061060a565b60405180910390fd5b6103247ffe81a399660f98ed09090cb688ec7b1cb121ec29b2ea926842cdcb9095c7372960001b610388565b6103507f5228792f31b6666beb0f41083fa73b8e1a13695be6f4b838e59bc555857fa75260001b610388565b61037c7f7f0cc1ad99496162bcde265fcbc3a149265355d205c912dddf86e21b0b2352e960001b610388565b610385816104c7565b50565b50565b565b60006103bb7f3489c58ade827b95978cd51a43e16bda7991437c24b8193fb08b370c31dc2e4d60001b610388565b6103e77f85f7ba7efa9a5308ecc8d2c3f4bd900bea57a896929fd95793a87d15f1e8d79860001b610388565b6104137f179cdd2a149e5cc807b2e6c3f62d74e88778ff096c04ea142caa970f111d2bc060001b610388565b61041b610446565b905090565b3660008037600080366000845af43d6000803e8060008114610441573d6000f35b3d6000fd5b60006104747f54af69f8f53845dd589e6a3098b129cb83deee27c56cbce956e69295a47a1fb360001b610545565b6104a07fa24eaa55cb250d261b318594775d232d4b5fda8775e9dae1c78e2c5f4271ad7960001b610545565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc54905090565b6104f37f281dc8a9869a81bb24d0d61fcbd756ccb10dbab03c08278b107b5050c230d81a60001b610545565b61051f7f886eec49c242f6967bad5b9289f67c22490e3021cc7bceb1d47fe9114cbc2f3960001b610545565b807f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5550565b50565b600081359050610557816106e9565b92915050565b60008135905061056c81610700565b92915050565b60006020828403121561058457600080fd5b600061059284828501610548565b91505092915050565b6000602082840312156105ad57600080fd5b60006105bb8482850161055d565b91505092915050565b60006105d1601e8361064a565b91506105dc82610697565b602082019050919050565b60006105f460178361064a565b91506105ff826106c0565b602082019050919050565b60006020820190508181036000830152610623816105c4565b9050919050565b60006020820190508181036000830152610643816105e7565b9050919050565b600082825260208201905092915050565b600061066682610677565b9050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b7f5555505350726f78793a20616c726561647920696e697469616c697a65640000600082015250565b7f5555505350726f78793a207a65726f2061646472657373000000000000000000600082015250565b6106f28161065b565b81146106fd57600080fd5b50565b6107098161066d565b811461071457600080fd5b5056fea2646970667358221220d5e8472a240f4160dd3b30c73f69eedf4766e1f37144aead97f0b35046e330e964736f6c63430008010033";
