/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";

import type { UUPSProxy } from "../UUPSProxy";

export class UUPSProxy__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<UUPSProxy> {
    return super.deploy(overrides || {}) as Promise<UUPSProxy>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): UUPSProxy {
    return super.attach(address) as UUPSProxy;
  }
  connect(signer: Signer): UUPSProxy__factory {
    return super.connect(signer) as UUPSProxy__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): UUPSProxy {
    return new Contract(address, _abi, signerOrProvider) as UUPSProxy;
  }
}

const _abi = [
  {
    stateMutability: "payable",
    type: "fallback",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "c__0xc63f9b66",
        type: "bytes32",
      },
    ],
    name: "c_0xc63f9b66",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "initialAddress",
        type: "address",
      },
    ],
    name: "initializeProxy",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061074d806100206000396000f3fe60806040526004361061002d5760003560e01c80634a0687ef146100465780634efb945f1461006f5761003c565b3661003c5761003a610098565b005b610044610098565b005b34801561005257600080fd5b5061006d60048036038101906100689190610572565b6100b2565b005b34801561007b57600080fd5b506100966004803603810190610091919061059b565b610388565b005b6100a061038b565b6100b06100ab61038d565b610420565b565b6100de7fec76c845eb99158e95c2a4351db54beda967cac5951df59a4552b5766faf23e660001b610388565b61010a7ff6a544f324d06f637955108fd56b64f8f38b94e35a8c5b58e86b994b1fbc475360001b610388565b6101367f4e584d8ef5863a260c4ff049b16b4d69638c6e04bf255f86598f199f3a4dbc2460001b610388565b6101627f0a5ceaa49cd0000190217c485982eb5aece21ab8b46078d6e832682dda34eba560001b610388565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156101d2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101c99061062a565b60405180910390fd5b6101fe7fd70c377b2f9120bc8da8ca16cb08a284f31f889048e4ccec8ab029a39092480060001b610388565b61022a7f52782af1633904b7f58e73bd75dc113bcb043a6e8742ec67b6a8a647bc6b67a660001b610388565b6102567f8639d9252c4c485cc37e6037a12798726a3e7cb9613a90cf934645738988029c60001b610388565b6102827f1920c906b740c3609e2182c5a017e131b12681848037db4cf3014ecd71487f8b60001b610388565b600073ffffffffffffffffffffffffffffffffffffffff166102a2610446565b73ffffffffffffffffffffffffffffffffffffffff16146102f8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102ef9061060a565b60405180910390fd5b6103247f945d6c8d391fe3ad557ab2c9f42524905147e7747c27650aede77b69c28560e260001b610388565b6103507f8bafeff8ab6b0fe1efc7925728e505e84ee7085cfc6b700e266be872f5b5451d60001b610388565b61037c7f1cc5909dbf05964db7c6df41be966741be9136477e4b1958b6999ad4fa1810ef60001b610388565b610385816104c7565b50565b50565b565b60006103bb7fc6549fb8906f4cf5d3d8b5b7bf08e797130c73347a84fe065c858742ec8dde2d60001b610388565b6103e77f15d9ba1748f9a0cbe5317f9539f0c3eba3bf3b11b54a710b2f26ade6a2987e7c60001b610388565b6104137f3ad4a1917bb976b2084762557be8bf265c1331e74db79b9cfa26bfecc40fdcf460001b610388565b61041b610446565b905090565b3660008037600080366000845af43d6000803e8060008114610441573d6000f35b3d6000fd5b60006104747f305e4729da742d98e37aad089b493a750cd711c6ea43646fa6e30f67868be53260001b610545565b6104a07f8a4887838e1c7753c2a7924b6211d37670c133a38d4f7a87c38fb2ee20c01c7b60001b610545565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc54905090565b6104f37f5bbf6d8633601fa9642518f32635abba9e55b05a17fcfa4665ecf48132f4e09760001b610545565b61051f7ff3beb3ae7e4248068e4d942a1e45d991bc51bfabf8f58d75a58c13f1531eb8c460001b610545565b807f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5550565b50565b600081359050610557816106e9565b92915050565b60008135905061056c81610700565b92915050565b60006020828403121561058457600080fd5b600061059284828501610548565b91505092915050565b6000602082840312156105ad57600080fd5b60006105bb8482850161055d565b91505092915050565b60006105d1601e8361064a565b91506105dc82610697565b602082019050919050565b60006105f460178361064a565b91506105ff826106c0565b602082019050919050565b60006020820190508181036000830152610623816105c4565b9050919050565b60006020820190508181036000830152610643816105e7565b9050919050565b600082825260208201905092915050565b600061066682610677565b9050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b7f5555505350726f78793a20616c726561647920696e697469616c697a65640000600082015250565b7f5555505350726f78793a207a65726f2061646472657373000000000000000000600082015250565b6106f28161065b565b81146106fd57600080fd5b50565b6107098161066d565b811461071457600080fd5b5056fea264697066735822122050df42df8a3540b2c9708670c14bf1c00af78f53e72fe7d95cced522dfc33de264736f6c63430008010033";
