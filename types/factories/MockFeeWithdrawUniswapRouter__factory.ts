/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";

import type { MockFeeWithdrawUniswapRouter } from "../MockFeeWithdrawUniswapRouter";

export class MockFeeWithdrawUniswapRouter__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<MockFeeWithdrawUniswapRouter> {
    return super.deploy(
      overrides || {}
    ) as Promise<MockFeeWithdrawUniswapRouter>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): MockFeeWithdrawUniswapRouter {
    return super.attach(address) as MockFeeWithdrawUniswapRouter;
  }
  connect(signer: Signer): MockFeeWithdrawUniswapRouter__factory {
    return super.connect(signer) as MockFeeWithdrawUniswapRouter__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MockFeeWithdrawUniswapRouter {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as MockFeeWithdrawUniswapRouter;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountOutMin",
        type: "uint256",
      },
      {
        internalType: "address[]",
        name: "path",
        type: "address[]",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
    ],
    name: "swapExactTokensForTokens",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061012e806100206000396000f3fe6080604052348015600f57600080fd5b506004361060285760003560e01c806338ed173914602d575b600080fd5b603c60383660046046565b603e565b005b505050505050565b60008060008060008060a08789031215605d578182fd5b8635955060208701359450604087013567ffffffffffffffff808211156081578384fd5b818901915089601f8301126093578384fd5b81358181111560a0578485fd5b8a6020808302850101111560b2578485fd5b602083019650809550505050606087013573ffffffffffffffffffffffffffffffffffffffff8116811460e3578283fd5b8092505060808701359050929550929550929556fea2646970667358221220fc1711e1fd3788f664820d0ea0c3c645e5b146cbf017f3cb7b687725340f103464736f6c63430008010033";
