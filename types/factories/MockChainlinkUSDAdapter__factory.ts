/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";

import type { MockChainlinkUSDAdapter } from "../MockChainlinkUSDAdapter";

export class MockChainlinkUSDAdapter__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<MockChainlinkUSDAdapter> {
    return super.deploy(overrides || {}) as Promise<MockChainlinkUSDAdapter>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): MockChainlinkUSDAdapter {
    return super.attach(address) as MockChainlinkUSDAdapter;
  }
  connect(signer: Signer): MockChainlinkUSDAdapter__factory {
    return super.connect(signer) as MockChainlinkUSDAdapter__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MockChainlinkUSDAdapter {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as MockChainlinkUSDAdapter;
  }
}

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "asset",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newPrice",
        type: "uint256",
      },
    ],
    name: "PriceUpdated",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "c__0x53f5c99d",
        type: "bytes32",
      },
    ],
    name: "c_0x53f5c99d",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "getPriceInUSD",
    outputs: [
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "viewPriceInUSD",
    outputs: [
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061028a806100206000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c806360053ee714610046578063e1aa603614610062578063f55fa17f14610080575b600080fd5b610060600480360381019061005b91906101d6565b61009e565b005b61006a6100a1565b604051610077919061020e565b60405180910390f35b610088610131565b604051610095919061020e565b60405180910390f35b50565b60006100cf7fd5b3b75f5cf3144a1d4adf7c48876fc4c5a5a5168461058062c103cffee9c5da60001b61009e565b6100fb7f1f7b7a07a1413bb8616f48f636b30b1ee19ec14220d70dd8e0121d311f763cc560001b61009e565b6101277f545ae9c3083a2380930a88510eb10da32cac5f044c6e5b7a002935845e68092160001b61009e565b6305f5e100905090565b600061015f7f4fbdf2509d3d1aaeb4815992a53426a947d5e25843e7d5402ce21650b3a19ad160001b61009e565b61018b7f82742396b22c7d85863fe56b981e3a9594e9f7cf9c0fb6180e5422074b48ec7860001b61009e565b6101b77faeefaad5a73ccf233de0cd0c780336f6c4ba74136ba12f7af13a3c72371e06a560001b61009e565b6305f5e100905090565b6000813590506101d08161023d565b92915050565b6000602082840312156101e857600080fd5b60006101f6848285016101c1565b91505092915050565b61020881610233565b82525050565b600060208201905061022360008301846101ff565b92915050565b6000819050919050565b6000819050919050565b61024681610229565b811461025157600080fd5b5056fea2646970667358221220917a42653dc50daf8680f6ba13445da0491ffac8e0b47bc4f2da54ca758e228d64736f6c63430008010033";
