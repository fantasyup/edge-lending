/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";

import type { Withdrawable } from "../Withdrawable";

export class Withdrawable__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Withdrawable> {
    return super.deploy(overrides || {}) as Promise<Withdrawable>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): Withdrawable {
    return super.attach(address) as Withdrawable;
  }
  connect(signer: Signer): Withdrawable__factory {
    return super.connect(signer) as Withdrawable__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Withdrawable {
    return new Contract(address, _abi, signerOrProvider) as Withdrawable;
  }
}

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_assetAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "LogWithdraw",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_assetAddress",
        type: "address",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50600061001b61006a565b600080546001600160a01b0319166001600160a01b0383169081178255604051929350917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a35061006e565b3390565b6108428061007d6000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c806351cff8d914610051578063715018a6146100665780638da5cb5b1461006e578063f2fde38b1461008c575b600080fd5b61006461005f3660046105b6565b61009f565b005b610064610211565b6100766102a7565b6040516100839190610631565b60405180910390f35b61006461009a3660046105b6565b6102b6565b6100a7610383565b6001600160a01b03166100b86102a7565b6001600160a01b0316146100e75760405162461bcd60e51b81526004016100de9061071d565b60405180910390fd5b60006001600160a01b038216610130575060405130803191339083156108fc029084906000818181858888f19350505050158015610129573d6000803e3d6000fd5b50506101c2565b6040516370a0823160e01b81526001600160a01b038316906370a082319061015c903090600401610631565b60206040518083038186803b15801561017457600080fd5b505afa158015610188573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101ac91906105fd565b90506101c26001600160a01b0383163383610387565b816001600160a01b0316336001600160a01b03167f9207361cc2a04b9c7a06691df1eb87c6a63957ae88bf01d0d18c81e3d12720998360405161020591906107d3565b60405180910390a35050565b610219610383565b6001600160a01b031661022a6102a7565b6001600160a01b0316146102505760405162461bcd60e51b81526004016100de9061071d565b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a36000805473ffffffffffffffffffffffffffffffffffffffff19169055565b6000546001600160a01b031690565b6102be610383565b6001600160a01b03166102cf6102a7565b6001600160a01b0316146102f55760405162461bcd60e51b81526004016100de9061071d565b6001600160a01b03811661031b5760405162461bcd60e51b81526004016100de90610691565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a36000805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0392909216919091179055565b3390565b61040a8363a9059cbb60e01b84846040516024016103a6929190610645565b60408051601f198184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff000000000000000000000000000000000000000000000000000000009093169290921790915261040f565b505050565b6000610464826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b031661049e9092919063ffffffff16565b80519091501561040a578080602001905181019061048291906105dd565b61040a5760405162461bcd60e51b81526004016100de90610789565b60606104ad84846000856104b7565b90505b9392505050565b6060824710156104d95760405162461bcd60e51b81526004016100de906106d7565b6104e285610577565b6104fe5760405162461bcd60e51b81526004016100de90610752565b600080866001600160a01b0316858760405161051a9190610615565b60006040518083038185875af1925050503d8060008114610557576040519150601f19603f3d011682016040523d82523d6000602084013e61055c565b606091505b509150915061056c82828661057d565b979650505050505050565b3b151590565b6060831561058c5750816104b0565b82511561059c5782518084602001fd5b8160405162461bcd60e51b81526004016100de919061065e565b6000602082840312156105c7578081fd5b81356001600160a01b03811681146104b0578182fd5b6000602082840312156105ee578081fd5b815180151581146104b0578182fd5b60006020828403121561060e578081fd5b5051919050565b600082516106278184602087016107dc565b9190910192915050565b6001600160a01b0391909116815260200190565b6001600160a01b03929092168252602082015260400190565b600060208252825180602084015261067d8160408501602087016107dc565b601f01601f19169190910160400192915050565b60208082526026908201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160408201526564647265737360d01b606082015260800190565b60208082526026908201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6040820152651c8818d85b1b60d21b606082015260800190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6020808252601d908201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604082015260600190565b6020808252602a908201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6040820152691bdd081cdd58d8d9595960b21b606082015260800190565b90815260200190565b60005b838110156107f75781810151838201526020016107df565b83811115610806576000848401525b5050505056fea2646970667358221220861ed1621548aafdd23d0bd1c9d2dec2ffadd45545906f6db583eb6f66eb0bce64736f6c63430008010033";
