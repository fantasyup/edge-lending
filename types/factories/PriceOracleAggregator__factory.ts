/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";

import type { PriceOracleAggregator } from "../PriceOracleAggregator";

export class PriceOracleAggregator__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    _blackSmithTeam: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<PriceOracleAggregator> {
    return super.deploy(
      _blackSmithTeam,
      overrides || {}
    ) as Promise<PriceOracleAggregator>;
  }
  getDeployTransaction(
    _blackSmithTeam: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_blackSmithTeam, overrides || {});
  }
  attach(address: string): PriceOracleAggregator {
    return super.attach(address) as PriceOracleAggregator;
  }
  connect(signer: Signer): PriceOracleAggregator__factory {
    return super.connect(signer) as PriceOracleAggregator__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): PriceOracleAggregator {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as PriceOracleAggregator;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_blackSmithTeam",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "contract IERC20",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "contract IOracle",
        name: "oracle",
        type: "address",
      },
    ],
    name: "UpdateOracle",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    name: "assetToOracle",
    outputs: [
      {
        internalType: "contract IOracle",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "blackSmithTeam",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "_token",
        type: "address",
      },
    ],
    name: "getPriceInUSD",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "_asset",
        type: "address",
      },
      {
        internalType: "contract IOracle",
        name: "_oracle",
        type: "address",
      },
    ],
    name: "updateOracleForAsset",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "_token",
        type: "address",
      },
    ],
    name: "viewPriceInUSD",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5060405161056838038061056883398101604081905261002f91610054565b600080546001600160a01b0319166001600160a01b0392909216919091179055610082565b600060208284031215610065578081fd5b81516001600160a01b038116811461007b578182fd5b9392505050565b6104d7806100916000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c8063022661471461005c5780632e00d245146100855780635b643561146100a55780635df52114146100ad578063eb9d14a9146100c2575b600080fd5b61006f61006a36600461035e565b6100d5565b60405161007c9190610480565b60405180910390f35b61009861009336600461035e565b6101a6565b60405161007c91906103d1565b6100986101c1565b6100c06100bb366004610381565b6101d0565b005b61006f6100d036600461035e565b6102c0565b6001600160a01b038181166000908152600160205260408120549091166101175760405162461bcd60e51b815260040161010e90610426565b60405180910390fd5b6001600160a01b0380831660009081526001602090815260408083205481516370d5301b60e11b8152915194169363e1aa603693600480840194938390030190829087803b15801561016857600080fd5b505af115801561017c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101a091906103b9565b92915050565b6001602052600090815260409020546001600160a01b031681565b6000546001600160a01b031681565b6000546001600160a01b031633146101fa5760405162461bcd60e51b815260040161010e9061045d565b6001600160a01b0382166102205760405162461bcd60e51b815260040161010e906103ff565b6001600160a01b0381166102465760405162461bcd60e51b815260040161010e90610426565b6001600160a01b0382811660009081526001602052604090819020805473ffffffffffffffffffffffffffffffffffffffff191692841692909217909155517fb1d1442dba579887e297ac433e5716c847abf2dc052ee9de4869b7b1b8f6206d906102b490849084906103e5565b60405180910390a15050565b6001600160a01b038181166000908152600160205260408120549091166102f95760405162461bcd60e51b815260040161010e90610426565b6001600160a01b0380831660009081526001602090815260409182902054825163f55fa17f60e01b8152925193169263f55fa17f926004808201939291829003018186803b15801561034a57600080fd5b505afa15801561017c573d6000803e3d6000fd5b60006020828403121561036f578081fd5b813561037a81610489565b9392505050565b60008060408385031215610393578081fd5b823561039e81610489565b915060208301356103ae81610489565b809150509250929050565b6000602082840312156103ca578081fd5b5051919050565b6001600160a01b0391909116815260200190565b6001600160a01b0392831681529116602082015260400190565b6020808252600d908201526c1253959053125117d054d4d155609a1b604082015260600190565b6020808252600e908201527f494e56414c49445f4f5241434c45000000000000000000000000000000000000604082015260600190565b6020808252600990820152684f4e4c595f5445414d60b81b604082015260600190565b90815260200190565b6001600160a01b038116811461049e57600080fd5b5056fea2646970667358221220c2cac552254b3460e7ddc85b58d88084484e628abdd3c73750acd0fe503d08cd64736f6c63430008010033";
