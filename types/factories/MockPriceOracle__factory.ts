/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Signer,
  BigNumberish,
  Contract,
  ContractFactory,
  Overrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";

import type { MockPriceOracle } from "../MockPriceOracle";

export class MockPriceOracle__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    _price: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<MockPriceOracle> {
    return super.deploy(_price, overrides || {}) as Promise<MockPriceOracle>;
  }
  getDeployTransaction(
    _price: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_price, overrides || {});
  }
  attach(address: string): MockPriceOracle {
    return super.attach(address) as MockPriceOracle;
  }
  connect(signer: Signer): MockPriceOracle__factory {
    return super.connect(signer) as MockPriceOracle__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MockPriceOracle {
    return new Contract(address, _abi, signerOrProvider) as MockPriceOracle;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_price",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "_token",
        type: "address",
      },
    ],
    name: "getPriceInUSD",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "_asset",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_newPrice",
        type: "uint256",
      },
    ],
    name: "setPrice",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    name: "viewPriceInUSD",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506040516101fe3803806101fe83398101604081905261002f91610037565b60005561004f565b600060208284031215610048578081fd5b5051919050565b6101a08061005e6000396000f3fe608060405234801561001057600080fd5b50600436106100405760003560e01c8062e4768b14610045578063022661471461005a578063eb9d14a914610083575b600080fd5b610058610053366004610138565b610096565b005b61006d610068366004610117565b6100b2565b60405161007a9190610161565b60405180910390f35b61006d610091366004610117565b6100f9565b6001600160a01b03909116600090815260016020526040902055565b6001600160a01b038116600090815260016020526040812054156100ef57506001600160a01b0381166000908152600160205260409020546100f4565b506000545b919050565b5060005490565b80356001600160a01b03811681146100f457600080fd5b600060208284031215610128578081fd5b61013182610100565b9392505050565b6000806040838503121561014a578081fd5b61015383610100565b946020939093013593505050565b9081526020019056fea2646970667358221220527019fb28a87c321b35ddae522d1869615e3ba5f6c4e5ed6d0dd9bdd01bd22364736f6c63430008010033";
