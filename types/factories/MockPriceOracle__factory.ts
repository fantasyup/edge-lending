/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";

import type { MockPriceOracle } from "../MockPriceOracle";

export class MockPriceOracle__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<MockPriceOracle> {
    return super.deploy(overrides || {}) as Promise<MockPriceOracle>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): MockPriceOracle {
    return super.attach(address) as MockPriceOracle;
  }
  connect(signer: Signer): MockPriceOracle__factory {
    return super.connect(signer) as MockPriceOracle__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MockPriceOracle {
    return new Contract(address, _abi, signerOrProvider) as MockPriceOracle;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "c__0xe557ede9",
        type: "bytes32",
      },
    ],
    name: "c_0xe557ede9",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    name: "getPriceInETH",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    name: "getPriceInUSD",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    name: "viewPriceInETH",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    name: "viewPriceInUSD",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x6080604052670de0b6b3a764000060005534801561001c57600080fd5b506105ab8061002c6000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c8063022661471461005c57806317267e491461008c57806353c92f46146100bc578063e2493875146100ec578063eb9d14a914610108575b600080fd5b6100766004803603810190610071919061049c565b610138565b60405161008391906104d4565b60405180910390f35b6100a660048036038101906100a1919061049c565b61022f565b6040516100b391906104d4565b60405180910390f35b6100d660048036038101906100d1919061049c565b6102bf565b6040516100e391906104d4565b60405180910390f35b61010660048036038101906101019190610473565b6103b6565b005b610122600480360381019061011d919061049c565b6103b9565b60405161012f91906104d4565b60405180910390f35b60006101667f55568eb83df113001640dd6f3e8f0d9846163926c8046a66b242a4b65ae80c5260001b6103b6565b6101927f5f61bd3c0bd196990ae9bdcab4306cb1bd08e00af47239ebdbdf993318edce9560001b6103b6565b6101be7f232e3ef760312825eb777c3e568916daa8e527e5e82d564eac37f1bba49b7e9960001b6103b6565b670de0b6b3a76400006000819055506101f97f74a7082fbc7f6d833103b46269ec16e5ecc650a17d21d1c155b9663d0fc86a2660001b6103b6565b6102257fd900deee69e57418d4d26687a1afbebdcbff02a954c291ecfddef610433f60eb60001b6103b6565b6000549050919050565b600061025d7f516e03bf990ec874feb8a09e66ecd788eece21a4f49172322be33561a55a926960001b6103b6565b6102897fa77c0b2fa1b105cb7d68f1c080e1024871f8f7b5f40f8b9bb1bb74981a39bb2160001b6103b6565b6102b57fcc31f13d3f7ffbce979ca94a4188308bed08cf374f4fed5d6ddb12781e2d3bfe60001b6103b6565b6000549050919050565b60006102ed7f530295075f9f56c2e4263a7cfbb93f822d69eb0c810e4ede2d6f738561d00b2a60001b6103b6565b6103197f8c136340ebadf56946ab21010c13cafe55fd02c887860a5bad0bad2b1850c07f60001b6103b6565b6103457fe6809c9f2361eae0c5b309eea987c9eea73576f07424c55bd2e52b6e05c8172d60001b6103b6565b670de0b6b3a76400006000819055506103807fa6e0fdf886e7422686bafc2d3282214c634c1f10c86d68507e198a770b17889d60001b6103b6565b6103ac7f988b2ebde3f8ccbbceddeb9d436442c88e7a415b92b11362c244ce1f53f5c22c60001b6103b6565b6000549050919050565b50565b60006103e77f35e1c5f43908263df517faf4eaf783e95828fffb384cf3fc06534460cf38b4b860001b6103b6565b6104137f5945c8a4915a0a31f18a5afc2da22ff8c5f81cee42730b4fc48f62487a6a755960001b6103b6565b61043f7ffcdc21290e5de05913f98632dcf0f5673d35ca743a69a4d395f9d553877bbdb460001b6103b6565b6000549050919050565b60008135905061045881610547565b92915050565b60008135905061046d8161055e565b92915050565b60006020828403121561048557600080fd5b600061049384828501610449565b91505092915050565b6000602082840312156104ae57600080fd5b60006104bc8482850161045e565b91505092915050565b6104ce8161053d565b82525050565b60006020820190506104e960008301846104c5565b92915050565b60006104fa8261051d565b9050919050565b6000819050919050565b6000610516826104ef565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b61055081610501565b811461055b57600080fd5b50565b6105678161050b565b811461057257600080fd5b5056fea2646970667358221220f7a3d9a12f59cb80b2991b0a3cf47cb06b4f4313e71ceb5f6c47ce677376afe364736f6c63430008010033";
