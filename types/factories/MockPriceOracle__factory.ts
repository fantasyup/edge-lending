/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";

import type { MockPriceOracle } from "../MockPriceOracle";

export class MockPriceOracle__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<MockPriceOracle> {
    return super.deploy(overrides || {}) as Promise<MockPriceOracle>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): MockPriceOracle {
    return super.attach(address) as MockPriceOracle;
  }
  connect(signer: Signer): MockPriceOracle__factory {
    return super.connect(signer) as MockPriceOracle__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MockPriceOracle {
    return new Contract(address, _abi, signerOrProvider) as MockPriceOracle;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    name: "getPriceInETH",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    name: "getPriceInUSD",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    name: "viewPriceInETH",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    name: "viewPriceInUSD",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x6080604052670de0b6b3a764000060005534801561001c57600080fd5b506102608061002c6000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c8063022661471461005157806317267e491461008157806353c92f46146100b1578063eb9d14a9146100e1575b600080fd5b61006b60048036038101906100669190610172565b610111565b60405161007891906101aa565b60405180910390f35b61009b60048036038101906100969190610172565b61012c565b6040516100a891906101aa565b60405180910390f35b6100cb60048036038101906100c69190610172565b610137565b6040516100d891906101aa565b60405180910390f35b6100fb60048036038101906100f69190610172565b610152565b60405161010891906101aa565b60405180910390f35b6000670de0b6b3a76400006000819055506000549050919050565b600080549050919050565b6000670de0b6b3a76400006000819055506000549050919050565b600080549050919050565b60008135905061016c81610213565b92915050565b60006020828403121561018457600080fd5b60006101928482850161015d565b91505092915050565b6101a481610209565b82525050565b60006020820190506101bf600083018461019b565b92915050565b60006101d0826101e9565b9050919050565b60006101e2826101c5565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b61021c816101d7565b811461022757600080fd5b5056fea2646970667358221220824f344b1865e5b30b643fa3c25efb4c0ea49d75b3571125051f1e55812fc9cd64736f6c63430008010033";
