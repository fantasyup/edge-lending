/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Signer,
  BigNumberish,
  Contract,
  ContractFactory,
  Overrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";

import type { MockPriceOracle } from "../MockPriceOracle";

export class MockPriceOracle__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    _price: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<MockPriceOracle> {
    return super.deploy(_price, overrides || {}) as Promise<MockPriceOracle>;
  }
  getDeployTransaction(
    _price: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_price, overrides || {});
  }
  attach(address: string): MockPriceOracle {
    return super.attach(address) as MockPriceOracle;
  }
  connect(signer: Signer): MockPriceOracle__factory {
    return super.connect(signer) as MockPriceOracle__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MockPriceOracle {
    return new Contract(address, _abi, signerOrProvider) as MockPriceOracle;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_price",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "c__0xd7781eb1",
        type: "bytes32",
      },
    ],
    name: "c_0xd7781eb1",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    name: "getPriceInUSD",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_newPrice",
        type: "uint256",
      },
    ],
    name: "setPrice",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    name: "viewPriceInUSD",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506040516105f83803806105f8833981810160405281019061003291906100ed565b6100647fa7d3c64e211ec72bcf6e6c289c7b5b30215c7a6d7a04b1d5d8e1820b23c6015d60001b6100d560201b60201c565b6100967f4f4ab91e4e74f9d24666a6f3bdaf1847f18bf22b30e8b11319d651f614a5432660001b6100d560201b60201c565b6100c87f798a2e7770d42fcf59401ab1b9098138b637a3b9e71cd9cacb070e183289e74d60001b6100d560201b60201c565b8060008190555050610137565b50565b6000815190506100e781610120565b92915050565b6000602082840312156100ff57600080fd5b600061010d848285016100d8565b91505092915050565b6000819050919050565b61012981610116565b811461013457600080fd5b50565b6104b2806101466000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c80630226614714610051578063795363cf1461008157806391b7f5ed1461009d578063eb9d14a9146100b9575b600080fd5b61006b60048036038101906100669190610363565b6100e9565b60405161007891906103c4565b60405180910390f35b61009b6004803603810190610096919061033a565b6101da565b005b6100b760048036038101906100b2919061038c565b6101dd565b005b6100d360048036038101906100ce9190610363565b61026b565b6040516100e091906103c4565b60405180910390f35b60006101177f81f2e54146979f28eb994fd45b0bc0641297e422d5c43c8c4ab85481c569364d60001b6101da565b6101437f4b2e5c488aef95f7f2ee9b1a235cd9360a3ea91f3f59e51f2f67b9ebf2eec5ef60001b6101da565b61016f7f7bb10f73e34363eeb555d3174c1b5fcac80b722a8e2766ad40fd340df01f1e9e60001b6101da565b6000546000819055506101a47f3d1a42824b173a975fdaaf8af761d06beb5bf81e97614120c8ff4736a2b1b9a460001b6101da565b6101d07f881ab47a1c9ae2d7eaccd88e00fdfd022e67088c1748c8c83cc1bbf3ea4d49bd60001b6101da565b6000549050919050565b50565b6102097fe4ce0b5fc2cce19951a2804c18e891385a394dceeabb10c2ee8a8ace73cf316360001b6101da565b6102357f2c1be5a259e610696265b77c014f7ff010984df3c6d20c45ff964233378bfa7960001b6101da565b6102617f5d2c558825203066a7729ffd3f240a0bd71f984d98aef4ed0ed7667787d4398a60001b6101da565b8060008190555050565b60006102997fc5f0bb1a7f641fe39240d8edb98a0560a7fa5be3bbe3ecec05f0c74388f1e13860001b6101da565b6102c57fb897445f74404b4bae04143b190b7fd26814bfeed6b38bc7965d79896450afa660001b6101da565b6102f17f56ee5e8ce257aef498ec0be2d05e68e284ae65e05cfbf0430e008dfcc662498b60001b6101da565b6000549050919050565b60008135905061030a81610437565b92915050565b60008135905061031f8161044e565b92915050565b60008135905061033481610465565b92915050565b60006020828403121561034c57600080fd5b600061035a848285016102fb565b91505092915050565b60006020828403121561037557600080fd5b600061038384828501610310565b91505092915050565b60006020828403121561039e57600080fd5b60006103ac84828501610325565b91505092915050565b6103be8161042d565b82525050565b60006020820190506103d960008301846103b5565b92915050565b60006103ea8261040d565b9050919050565b6000819050919050565b6000610406826103df565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b610440816103f1565b811461044b57600080fd5b50565b610457816103fb565b811461046257600080fd5b50565b61046e8161042d565b811461047957600080fd5b5056fea26469706673582212204c037c5aebaa9f51732a93d6cf11713cb507201ac236fc71ba3a5b65cd77f63064736f6c63430008010033";
