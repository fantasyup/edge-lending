/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Signer,
  BigNumberish,
  Contract,
  ContractFactory,
  Overrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";

import type { MockPriceOracle } from "../MockPriceOracle";

export class MockPriceOracle__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    _price: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<MockPriceOracle> {
    return super.deploy(_price, overrides || {}) as Promise<MockPriceOracle>;
  }
  getDeployTransaction(
    _price: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_price, overrides || {});
  }
  attach(address: string): MockPriceOracle {
    return super.attach(address) as MockPriceOracle;
  }
  connect(signer: Signer): MockPriceOracle__factory {
    return super.connect(signer) as MockPriceOracle__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MockPriceOracle {
    return new Contract(address, _abi, signerOrProvider) as MockPriceOracle;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_price",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    name: "getPriceInETH",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    name: "getPriceInUSD",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_newPrice",
        type: "uint256",
      },
    ],
    name: "setPrice",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    name: "viewPriceInETH",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    name: "viewPriceInUSD",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5060405161038538038061038583398181016040528101906100329190610054565b806000819055505061009e565b60008151905061004e81610087565b92915050565b60006020828403121561006657600080fd5b60006100748482850161003f565b91505092915050565b6000819050919050565b6100908161007d565b811461009b57600080fd5b50565b6102d8806100ad6000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c8063022661471461005c57806317267e491461008c57806353c92f46146100bc57806391b7f5ed146100ec578063eb9d14a914610108575b600080fd5b610076600480360381019061007191906101aa565b610138565b604051610083919061020b565b60405180910390f35b6100a660048036038101906100a191906101aa565b61014c565b6040516100b3919061020b565b60405180910390f35b6100d660048036038101906100d191906101aa565b610157565b6040516100e3919061020b565b60405180910390f35b610106600480360381019061010191906101d3565b61016b565b005b610122600480360381019061011d91906101aa565b610175565b60405161012f919061020b565b60405180910390f35b600080546000819055506000549050919050565b600080549050919050565b600080546000819055506000549050919050565b8060008190555050565b600080549050919050565b60008135905061018f81610274565b92915050565b6000813590506101a48161028b565b92915050565b6000602082840312156101bc57600080fd5b60006101ca84828501610180565b91505092915050565b6000602082840312156101e557600080fd5b60006101f384828501610195565b91505092915050565b6102058161026a565b82525050565b600060208201905061022060008301846101fc565b92915050565b60006102318261024a565b9050919050565b600061024382610226565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b61027d81610238565b811461028857600080fd5b50565b6102948161026a565b811461029f57600080fd5b5056fea26469706673582212207f94b2aa91632ed546cf4fa3ca4461c12dedbacc28ae82d9736a0cf358705d6864736f6c63430008010033";
