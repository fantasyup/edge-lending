/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Signer,
  BigNumberish,
  Contract,
  ContractFactory,
  Overrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";

import type { JumpRateModelV2 } from "../JumpRateModelV2";

export class JumpRateModelV2__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    baseRatePerYear: BigNumberish,
    multiplierPerYear: BigNumberish,
    jumpMultiplierPerYear: BigNumberish,
    kink_: BigNumberish,
    owner_: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<JumpRateModelV2> {
    return super.deploy(
      baseRatePerYear,
      multiplierPerYear,
      jumpMultiplierPerYear,
      kink_,
      owner_,
      overrides || {}
    ) as Promise<JumpRateModelV2>;
  }
  getDeployTransaction(
    baseRatePerYear: BigNumberish,
    multiplierPerYear: BigNumberish,
    jumpMultiplierPerYear: BigNumberish,
    kink_: BigNumberish,
    owner_: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      baseRatePerYear,
      multiplierPerYear,
      jumpMultiplierPerYear,
      kink_,
      owner_,
      overrides || {}
    );
  }
  attach(address: string): JumpRateModelV2 {
    return super.attach(address) as JumpRateModelV2;
  }
  connect(signer: Signer): JumpRateModelV2__factory {
    return super.connect(signer) as JumpRateModelV2__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): JumpRateModelV2 {
    return new Contract(address, _abi, signerOrProvider) as JumpRateModelV2;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "baseRatePerYear",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "multiplierPerYear",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "jumpMultiplierPerYear",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "kink_",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "owner_",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "baseRatePerBlock",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "multiplierPerBlock",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "jumpMultiplierPerBlock",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "kink",
        type: "uint256",
      },
    ],
    name: "NewInterestParams",
    type: "event",
  },
  {
    inputs: [],
    name: "baseRatePerBlock",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "blocksPerYear",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "cash",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "borrows",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "reserves",
        type: "uint256",
      },
    ],
    name: "getBorrowRate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "cash",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "borrows",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "reserves",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "reserveFactorMantissa",
        type: "uint256",
      },
    ],
    name: "getSupplyRate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "jumpMultiplierPerBlock",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "kink",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "multiplierPerBlock",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "baseRatePerYear",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "multiplierPerYear",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "jumpMultiplierPerYear",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "kink_",
        type: "uint256",
      },
    ],
    name: "updateJumpRateModel",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "cash",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "borrows",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "reserves",
        type: "uint256",
      },
    ],
    name: "utilizationRate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5060405161075338038061075383398101604081905261002f91610103565b600080546001600160a01b0319166001600160a01b038316179055848484848461005b8585858561006a565b505050505050505050506101c2565b6100776220148085610177565b6002556100878162201480610197565b61009984670de0b6b3a7640000610197565b6100a39190610177565b6001556100b36220148083610177565b600381905560048290556002546001546040517f6960ab234c7ef4b0c9197100f5393cfcde7c453ac910a27bd2000aa1dd4c068d936100f5939291869061015c565b60405180910390a150505050565b600080600080600060a0868803121561011a578081fd5b855160208701516040880151606089015160808a0151939850919650945092506001600160a01b038116811461014e578182fd5b809150509295509295909350565b93845260208401929092526040830152606082015260800190565b60008261019257634e487b7160e01b81526012600452602481fd5b500490565b60008160001904831182151516156101bd57634e487b7160e01b81526011600452602481fd5b500290565b610582806101d16000396000f3fe608060405234801561001057600080fd5b506004361061009e5760003560e01c8063a385fb9611610066578063a385fb9614610111578063b816881614610119578063b9f9850a1461012c578063f14039de14610134578063fd2da3391461013c5761009e565b806315f24053146100a35780632037f3e7146100cc5780636e71e2d8146100e15780638726bb89146100f45780638da5cb5b146100fc575b600080fd5b6100b66100b13660046103ee565b610144565b6040516100c391906104a4565b60405180910390f35b6100df6100da366004610419565b61015b565b005b6100b66100ef3660046103ee565b6101a0565b6100b66101e0565b6101046101e6565b6040516100c3919061044a565b6100b66101f5565b6100b6610127366004610419565b6101fc565b6100b6610278565b6100b661027e565b6100b6610284565b600061015184848461028a565b90505b9392505050565b6000546001600160a01b0316331461018e5760405162461bcd60e51b81526004016101859061045e565b60405180910390fd5b61019a84848484610355565b50505050565b6000826101af57506000610154565b816101ba84866104c8565b6101c4919061051f565b6101d684670de0b6b3a7640000610500565b61015191906104e0565b60015481565b6000546001600160a01b031681565b6220148081565b60008061021183670de0b6b3a764000061051f565b9050600061022087878761028a565b90506000670de0b6b3a76400006102378484610500565b61024191906104e0565b9050670de0b6b3a7640000816102588a8a8a6101a0565b6102629190610500565b61026c91906104e0565b98975050505050505050565b60035481565b60025481565b60045481565b6000806102988585856101a0565b905060045481116102d957600254670de0b6b3a7640000600154836102bd9190610500565b6102c791906104e0565b6102d191906104c8565b915050610154565b6000600254670de0b6b3a76400006001546004546102f79190610500565b61030191906104e0565b61030b91906104c8565b905060006004548361031d919061051f565b905081670de0b6b3a7640000600354836103379190610500565b61034191906104e0565b61034b91906104c8565b9350505050610154565b61036262201480856104e0565b6002556103728162201480610500565b61038484670de0b6b3a7640000610500565b61038e91906104e0565b60015561039e62201480836104e0565b600381905560048290556002546001546040517f6960ab234c7ef4b0c9197100f5393cfcde7c453ac910a27bd2000aa1dd4c068d936103e093929186906104ad565b60405180910390a150505050565b600080600060608486031215610402578283fd5b505081359360208301359350604090920135919050565b6000806000806080858703121561042e578081fd5b5050823594602084013594506040840135936060013592509050565b6001600160a01b0391909116815260200190565b60208082526026908201527f6f6e6c7920746865206f776e6572206d61792063616c6c20746869732066756e60408201526531ba34b7b71760d11b606082015260800190565b90815260200190565b93845260208401929092526040830152606082015260800190565b600082198211156104db576104db610536565b500190565b6000826104fb57634e487b7160e01b81526012600452602481fd5b500490565b600081600019048311821515161561051a5761051a610536565b500290565b60008282101561053157610531610536565b500390565b634e487b7160e01b600052601160045260246000fdfea2646970667358221220d3e31022f19029f6b10e3b0bc8bf806e45da3b50549fb265d3cfaaa94ac805c664736f6c63430008010033";
