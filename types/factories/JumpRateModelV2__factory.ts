/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Signer,
  BigNumberish,
  Contract,
  ContractFactory,
  Overrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";

import type { JumpRateModelV2 } from "../JumpRateModelV2";

export class JumpRateModelV2__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    baseRatePerYear: BigNumberish,
    multiplierPerYear: BigNumberish,
    jumpMultiplierPerYear: BigNumberish,
    kink_: BigNumberish,
    owner_: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<JumpRateModelV2> {
    return super.deploy(
      baseRatePerYear,
      multiplierPerYear,
      jumpMultiplierPerYear,
      kink_,
      owner_,
      overrides || {}
    ) as Promise<JumpRateModelV2>;
  }
  getDeployTransaction(
    baseRatePerYear: BigNumberish,
    multiplierPerYear: BigNumberish,
    jumpMultiplierPerYear: BigNumberish,
    kink_: BigNumberish,
    owner_: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      baseRatePerYear,
      multiplierPerYear,
      jumpMultiplierPerYear,
      kink_,
      owner_,
      overrides || {}
    );
  }
  attach(address: string): JumpRateModelV2 {
    return super.attach(address) as JumpRateModelV2;
  }
  connect(signer: Signer): JumpRateModelV2__factory {
    return super.connect(signer) as JumpRateModelV2__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): JumpRateModelV2 {
    return new Contract(address, _abi, signerOrProvider) as JumpRateModelV2;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "baseRatePerYear",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "multiplierPerYear",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "jumpMultiplierPerYear",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "kink_",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "owner_",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "baseRatePerBlock",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "multiplierPerBlock",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "jumpMultiplierPerBlock",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "kink",
        type: "uint256",
      },
    ],
    name: "NewInterestParams",
    type: "event",
  },
  {
    inputs: [],
    name: "baseRatePerBlock",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "blocksPerYear",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "c__0x9d1ab90d",
        type: "bytes32",
      },
    ],
    name: "c_0x9d1ab90d",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "c__0xbd9cfc2e",
        type: "bytes32",
      },
    ],
    name: "c_0xbd9cfc2e",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "cash",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "borrows",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "reserves",
        type: "uint256",
      },
    ],
    name: "getBorrowRate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "cash",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "borrows",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "reserves",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "reserveFactorMantissa",
        type: "uint256",
      },
    ],
    name: "getSupplyRate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "jumpMultiplierPerBlock",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "kink",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "multiplierPerBlock",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "baseRatePerYear",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "multiplierPerYear",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "jumpMultiplierPerYear",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "kink_",
        type: "uint256",
      },
    ],
    name: "updateJumpRateModel",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "cash",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "borrows",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "reserves",
        type: "uint256",
      },
    ],
    name: "utilizationRate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001aa538038062001aa5833981810160405281019062000037919062000503565b8484848484620000707fb4d234b2ff13cf6ddef1b00ed761d495deba68850fbbf24344954e900bc775be60001b620001d860201b60201c565b620000a47fc60d3320a7ed795bd811207e81285b62e10f9fa70f17b23302932ff5f0d7a2f960001b620001d860201b60201c565b620000d87f2b583f31a8d40a5995d2eacbeb82d7c73240519ebd37bc003e828063b28039f660001b620001d860201b60201c565b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506200014c7fa65bb72ff52b6c651ed6eb455247f52fc3e7758ad0e62b2713712733f3a8d23c60001b620001d860201b60201c565b620001807f6014ab4916281c64486e49e6a7652d2908c41a49106844df707110e62a7a25db60001b620001d860201b60201c565b6200019485858585620001db60201b60201c565b5050505050620001cd7fbefe7af1b736c1e2d0acef12068a14071f7680b999ab0445e7c1560e3a08242660001b620004d260201b60201c565b50505050506200074c565b50565b6200020f7fbe11ae9862812a24abcedc98aea4b9972b022483cca29804871e07d00602352a60001b620001d860201b60201c565b620002437f0bc7ebd5532c4d1e4c62a9bbdfcb59b13ec865ad78b128ac82c664711d7438c960001b620001d860201b60201c565b620002777fff2fc637b481937b008331f8ce1e8cc1be6cbc442a9d4377d15b2877545152f960001b620001d860201b60201c565b6220148084620002889190620005e3565b600281905550620002c27f2a97ce402cabf68a73776ea2990743efc677e3f7a458a6afb173526d35e9a54160001b620001d860201b60201c565b620002f67f3262bbe5518118204ce989df26b3d2f5dcef19320f14bb68a1a115e0c6620d1f60001b620001d860201b60201c565b80622014806200030791906200061b565b670de0b6b3a7640000846200031d91906200061b565b620003299190620005e3565b600181905550620003637fe3b8c4a20cbff4b79081e71d9103ece0ea41941409c09925899b07cf17e4f7eb60001b620001d860201b60201c565b620003977f75075361d04ea0861c38e89129d93bb2c6a29c3b875f00b1f9c5525f3baf1abb60001b620001d860201b60201c565b6220148082620003a89190620005e3565b600381905550620003e27f4c1e932dd831c71d791c09425217bd088f7a9396a3596b544f10a55e486a28de60001b620001d860201b60201c565b620004167f59def1f2d63451f5e4fd7a7d18e9b45ca570f02121445056e17b61cc4f69ae2e60001b620001d860201b60201c565b80600481905550620004517fd20a38f3981ed1c67cc59f57c9cc8d72207f59fb9d2fb979b71fa2dc066fa65e60001b620001d860201b60201c565b620004857fc932da2c4ba60c7f41793a39bc6ebb0fe63270642780c768251320f417964d7460001b620001d860201b60201c565b7f6960ab234c7ef4b0c9197100f5393cfcde7c453ac910a27bd2000aa1dd4c068d600254600154600354600454604051620004c4949392919062000596565b60405180910390a150505050565b50565b600081519050620004e68162000718565b92915050565b600081519050620004fd8162000732565b92915050565b600080600080600060a086880312156200051c57600080fd5b60006200052c88828901620004ec565b95505060206200053f88828901620004ec565b94505060406200055288828901620004ec565b93505060606200056588828901620004ec565b92505060806200057888828901620004d5565b9150509295509295909350565b6200059081620006b0565b82525050565b6000608082019050620005ad600083018762000585565b620005bc602083018662000585565b620005cb604083018562000585565b620005da606083018462000585565b95945050505050565b6000620005f082620006b0565b9150620005fd83620006b0565b92508262000610576200060f620006e9565b5b828204905092915050565b60006200062882620006b0565b91506200063583620006b0565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615620006715762000670620006ba565b5b828202905092915050565b6000620006898262000690565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b62000723816200067c565b81146200072f57600080fd5b50565b6200073d81620006b0565b81146200074957600080fd5b50565b611349806200075c6000396000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c80638da5cb5b116100715780638da5cb5b1461018b578063a385fb96146101a9578063b8168816146101c7578063b9f9850a146101f7578063f14039de14610215578063fd2da33914610233576100b4565b806315f24053146100b957806319cdbd88146100e95780632037f3e71461010557806328712ff2146101215780636e71e2d81461013d5780638726bb891461016d575b600080fd5b6100d360048036038101906100ce9190610f3e565b610251565b6040516100e0919061106c565b60405180910390f35b61010360048036038101906100fe9190610f15565b6102eb565b005b61011f600480360381019061011a9190610f8d565b6102ee565b005b61013b60048036038101906101369190610f15565b6104c2565b005b61015760048036038101906101529190610f3e565b6104c5565b604051610164919061106c565b60405180910390f35b6101756106a4565b604051610182919061106c565b60405180910390f35b6101936106aa565b6040516101a09190611031565b60405180910390f35b6101b16106ce565b6040516101be919061106c565b60405180910390f35b6101e160048036038101906101dc9190610f8d565b6106d5565b6040516101ee919061106c565b60405180910390f35b6101ff6108e3565b60405161020c919061106c565b60405180910390f35b61021d6108e9565b60405161022a919061106c565b60405180910390f35b61023b6108ef565b604051610248919061106c565b60405180910390f35b600061027f7ffca4c314226551c93dec547563bb545890b2573f1c004fb53ebf36c41f5e130a60001b6104c2565b6102ab7fcae8bcaa58031d12192cabc0ed0e68d8317a7289ab2c4cdb95bc9e63a30fea7660001b6104c2565b6102d77fc21111b3d6e4c950a7ba5d3608ae803ce4d15fec6cf0992ec1430b42e942ccf560001b6104c2565b6102e28484846108f5565b90509392505050565b50565b61031a7f2abf71d10480d21891e9bff46a84b85e43c367583541b2d6171b4bd066a406d560001b6102eb565b6103467f3a863e0455bb6baa7a955de4971a0d0185d83bc76c0c31cc42e1c8cd38b980ad60001b6102eb565b6103727feaff5b75ac1690b94f35e50987f612bb7c5fb374c94f8b181adb6fc89a9f607a60001b6102eb565b61039e7f086d0024729d44e84038c8f6e93c8577f173418d842b4b2fbe4357bf6697ceca60001b6102eb565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461042c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104239061104c565b60405180910390fd5b6104587f13aa976b3b1f3842cfcf8a8864dfc1f6750bfa41875f720755d2187377c529ad60001b6102eb565b6104847fd869c2aa6908abca3580661a15b077fc00a7d91e041c209a85df3b16f30d9c6d60001b6102eb565b6104b07f27d4f6d7199cc5d24f45800b0ad3d367cbfced69770c4e9e84bc41b3686e5c0d60001b6102eb565b6104bc84848484610c58565b50505050565b50565b60006104f37fb78e47f0e71d0be77d280d65203b6dd9b347622432396f5a7e01349d9164985e60001b6102eb565b61051f7f03b329eecb03c7a27abefd1efbbb79655d8c2c83a8caefcae0b27c2e71d0410760001b6102eb565b61054b7f9d94060ee4fb7a3cf5dbf5d77e6aa191ad8312c385a7f8655c77a36c793a630260001b6102eb565b60008314156105e1576105807fad58efe8ae1b3a91ef28cefea8339d5536bb8461a78bc3c9a13b6d9ad0d013fb60001b6102eb565b6105ac7fe6eac6e796ffbae6ec57589cd647612f4b2daab81275e018408fc59a82c70ad260001b6102eb565b6105d87fbc704362ab59a5d77471bc8991fe03851ee53016a8942492c4a72ef9ced8a8bc60001b6102eb565b6000905061069d565b61060d7f703b5a64bdf2e3446cf6d567ab64cf7599dab09837dd48b00fa9498c1e3bdbd560001b6102eb565b6106397f0edd8315d6a1d9729ddfb261915be6fdc334fe465e0e97fa0149b06a9543ef3d60001b6102eb565b6106657fd36a04341428bf98c5bd366e8f9df2e1834d01722d6219be37583219dfcb1b3860001b6102eb565b81838561067291906110dd565b61067c91906111be565b670de0b6b3a7640000846106909190611164565b61069a9190611133565b90505b9392505050565b60015481565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6220148081565b60006107037f47c7ab02d3bd11805ea6e7a8181184b7cbefe3c490516c9cd0a4432df47ee08b60001b6102eb565b61072f7f3a556a281764029e3a8da89a5657f8d77b527e128f06cea5720044cab2f5086b60001b6102eb565b61075b7f95961fdfb669599b8cfb1659c51852904db73d875e636937096cad78f20e9e7860001b6102eb565b600082670de0b6b3a764000061077191906111be565b905061079f7f9daf33b9bdfa4f9a3fa3186b6bcc48e500012c0e64aa8726cde4163a2a809f1360001b6102eb565b6107cb7f83d88780c022b20395215997471999e4f719d8562060fcfca23fa0b95f96841360001b6102eb565b60006107d88787876108f5565b90506108067f1f2ab7f1ecc91e367df2ede344c05af5b9d6d7f39bf34af273c291a5c225896f60001b6102eb565b6108327f28582363243a6b3c88d41f28928f008c45fc16423f81f0490ecb4f622dc1d2b860001b6102eb565b6000670de0b6b3a764000083836108499190611164565b6108539190611133565b90506108817f1116336313219044dcaa04e58869531b41ca81e5d24182fb26333aeff9a76b2560001b6102eb565b6108ad7fe4c22a1f387f0fbda0ba7afc07229face6caea33f0fecab5bfe60a4128e0f68060001b6102eb565b670de0b6b3a7640000816108c28a8a8a6104c5565b6108cc9190611164565b6108d69190611133565b9350505050949350505050565b60035481565b60025481565b60045481565b60006109237f132b598d7e1bb94ac92721dae599d725df9701d71600612d9b8242537ba6116460001b6102eb565b61094f7f60b699136484e3d7a067e96a2eaafe3dfcf2cde7fa2077cc93d3b23b1e2356cf60001b6102eb565b61097b7f749d563828f28b2d82cc0449c43f8efb6046544522d85f2ea5187ddd63793a8d60001b6102eb565b60006109888585856104c5565b90506109b67f222427326104388ada315fe1d2cc2ebe60924f7c78dacf892a3829ecc82ec86f60001b6102eb565b6109e27f9ad86415a5b14410548bfd12246c537da44db4f1f58087d3c32591d5f6511cb960001b6102eb565b6004548111610aa557610a177ff2a90b79c68994d559ac341f23d6c65c2b1cde63f47d8db255a1453ffa1bc94960001b6102eb565b610a437f144a511ba63b217f5b9d3f1ee36ff2d8ecdc8a5614dd6f74ccab50ecb431047260001b6102eb565b610a6f7f28185c38b2e885b49cefcfe09900b5720f4ce04623161ff0ebbfe257996831ce60001b6102eb565b600254670de0b6b3a764000060015483610a899190611164565b610a939190611133565b610a9d91906110dd565b915050610c51565b610ad17f61918d35986a17cbefcd0e9906689d7204342f76f14467df7c1c8c3bd9e1e35a60001b6102eb565b610afd7f651789ad23c85ca60223f72e023975595400d57f55bc9769591e7214207d8cd760001b6102eb565b610b297feef65c2116d518433a48dea720e341dd65f39e33266a3b1bba07be914c0aa05560001b6102eb565b6000600254670de0b6b3a7640000600154600454610b479190611164565b610b519190611133565b610b5b91906110dd565b9050610b897f9ca9184ec6e43f6f6a0ccd13420b7729499bc9e9ac4542d6b39cca61bef0b04660001b6102eb565b610bb57f2d978668778b023e7dff26ccf9234ef0f3af9f59b90a87e5953d5f39195e505660001b6102eb565b600060045483610bc591906111be565b9050610bf37f0e357eccedc3166c11a5108ea4b3d912c4bff63baaf5ae5a0d9f0df1196a984060001b6102eb565b610c1f7fc98821325f3c1e5fd04936fcdefb79825a0d11dde7d428174cf5e319c24cd9c260001b6102eb565b81670de0b6b3a764000060035483610c379190611164565b610c419190611133565b610c4b91906110dd565b93505050505b9392505050565b610c847fbe11ae9862812a24abcedc98aea4b9972b022483cca29804871e07d00602352a60001b6102eb565b610cb07f0bc7ebd5532c4d1e4c62a9bbdfcb59b13ec865ad78b128ac82c664711d7438c960001b6102eb565b610cdc7fff2fc637b481937b008331f8ce1e8cc1be6cbc442a9d4377d15b2877545152f960001b6102eb565b6220148084610ceb9190611133565b600281905550610d1d7f2a97ce402cabf68a73776ea2990743efc677e3f7a458a6afb173526d35e9a54160001b6102eb565b610d497f3262bbe5518118204ce989df26b3d2f5dcef19320f14bb68a1a115e0c6620d1f60001b6102eb565b8062201480610d589190611164565b670de0b6b3a764000084610d6c9190611164565b610d769190611133565b600181905550610da87fe3b8c4a20cbff4b79081e71d9103ece0ea41941409c09925899b07cf17e4f7eb60001b6102eb565b610dd47f75075361d04ea0861c38e89129d93bb2c6a29c3b875f00b1f9c5525f3baf1abb60001b6102eb565b6220148082610de39190611133565b600381905550610e157f4c1e932dd831c71d791c09425217bd088f7a9396a3596b544f10a55e486a28de60001b6102eb565b610e417f59def1f2d63451f5e4fd7a7d18e9b45ca570f02121445056e17b61cc4f69ae2e60001b6102eb565b80600481905550610e747fd20a38f3981ed1c67cc59f57c9cc8d72207f59fb9d2fb979b71fa2dc066fa65e60001b6102eb565b610ea07fc932da2c4ba60c7f41793a39bc6ebb0fe63270642780c768251320f417964d7460001b6102eb565b7f6960ab234c7ef4b0c9197100f5393cfcde7c453ac910a27bd2000aa1dd4c068d600254600154600354600454604051610edd9493929190611087565b60405180910390a150505050565b600081359050610efa816112e5565b92915050565b600081359050610f0f816112fc565b92915050565b600060208284031215610f2757600080fd5b6000610f3584828501610eeb565b91505092915050565b600080600060608486031215610f5357600080fd5b6000610f6186828701610f00565b9350506020610f7286828701610f00565b9250506040610f8386828701610f00565b9150509250925092565b60008060008060808587031215610fa357600080fd5b6000610fb187828801610f00565b9450506020610fc287828801610f00565b9350506040610fd387828801610f00565b9250506060610fe487828801610f00565b91505092959194509250565b610ff9816111f2565b82525050565b600061100c6026836110cc565b915061101782611296565b604082019050919050565b61102b8161122e565b82525050565b60006020820190506110466000830184610ff0565b92915050565b6000602082019050818103600083015261106581610fff565b9050919050565b60006020820190506110816000830184611022565b92915050565b600060808201905061109c6000830187611022565b6110a96020830186611022565b6110b66040830185611022565b6110c36060830184611022565b95945050505050565b600082825260208201905092915050565b60006110e88261122e565b91506110f38361122e565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561112857611127611238565b5b828201905092915050565b600061113e8261122e565b91506111498361122e565b92508261115957611158611267565b5b828204905092915050565b600061116f8261122e565b915061117a8361122e565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156111b3576111b2611238565b5b828202905092915050565b60006111c98261122e565b91506111d48361122e565b9250828210156111e7576111e6611238565b5b828203905092915050565b60006111fd8261120e565b9050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f6f6e6c7920746865206f776e6572206d61792063616c6c20746869732066756e60008201527f6374696f6e2e0000000000000000000000000000000000000000000000000000602082015250565b6112ee81611204565b81146112f957600080fd5b50565b6113058161122e565b811461131057600080fd5b5056fea26469706673582212205decd32dffbac0080fd3e1fb8804b9f9def8e7a2459b4ec76bc0044189a202f364736f6c63430008010033";
