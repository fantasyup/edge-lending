/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";

import type { RewardDistributor } from "../RewardDistributor";

export class RewardDistributor__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    _rewardDistributorManager: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<RewardDistributor> {
    return super.deploy(
      _rewardDistributorManager,
      overrides || {}
    ) as Promise<RewardDistributor>;
  }
  getDeployTransaction(
    _rewardDistributorManager: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _rewardDistributorManager,
      overrides || {}
    );
  }
  attach(address: string): RewardDistributor {
    return super.attach(address) as RewardDistributor;
  }
  connect(signer: Signer): RewardDistributor__factory {
    return super.connect(signer) as RewardDistributor__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): RewardDistributor {
    return new Contract(address, _abi, signerOrProvider) as RewardDistributor;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_rewardDistributorManager",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "receiptToken",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "pid",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "AccumulateReward",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "lendingPair",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "distributor",
        type: "address",
      },
      {
        components: [
          {
            internalType: "uint128",
            name: "collateralTokenAllocPoint",
            type: "uint128",
          },
          {
            internalType: "uint128",
            name: "debtTokenAllocPoint",
            type: "uint128",
          },
          {
            internalType: "uint128",
            name: "borrowAssetTokenAllocPoint",
            type: "uint128",
          },
        ],
        indexed: false,
        internalType: "struct RewardDistributor.DistributorConfigVars",
        name: "vars",
        type: "tuple",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "AddDistribution",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "contract IERC20",
        name: "_rewardToken",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_amountDistributePerSecond",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_startTimestamp",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_endTimestamp",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "_guardian",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "pid",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "oldAllocPoint",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newAllocPoint",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "UpdateDistribution",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "distributor",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "poolId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Withdraw",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_tokenAddr",
        type: "address",
      },
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
    ],
    name: "accumulateReward",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "activatePendingRewards",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint128",
            name: "collateralTokenAllocPoint",
            type: "uint128",
          },
          {
            internalType: "uint128",
            name: "debtTokenAllocPoint",
            type: "uint128",
          },
          {
            internalType: "uint128",
            name: "borrowAssetTokenAllocPoint",
            type: "uint128",
          },
        ],
        internalType: "struct RewardDistributor.DistributorConfigVars",
        name: "_allocPoints",
        type: "tuple",
      },
      {
        internalType: "contract IBSLendingPair",
        name: "_lendingPair",
        type: "address",
      },
      {
        internalType: "bool",
        name: "_withUpdate",
        type: "bool",
      },
    ],
    name: "add",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "endTimestamp",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "guardian",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "_rewardToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amountDistributePerSecond",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_startTimestamp",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_endTimestamp",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_guardian",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "massUpdatePools",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "pendingRewardActivation",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_pid",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
    ],
    name: "pendingRewardToken",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "poolInfo",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "receiptTokenAddr",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "lastUpdateTimestamp",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "accRewardTokenPerShare",
        type: "uint256",
      },
      {
        internalType: "uint128",
        name: "allocPoint",
        type: "uint128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardAmountDistributePerSecond",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardDistributorManager",
    outputs: [
      {
        internalType: "contract IRewardDistributorManager",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardToken",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_pid",
        type: "uint256",
      },
      {
        internalType: "uint128",
        name: "_allocPoint",
        type: "uint128",
      },
      {
        internalType: "bool",
        name: "_withUpdate",
        type: "bool",
      },
    ],
    name: "set",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "startTimestamp",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "tokenPoolIDPair",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalAllocPoint",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_pid",
        type: "uint256",
      },
    ],
    name: "updatePool",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "userInfo",
    outputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "pendingReward",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "rewardDebt",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_pid",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60a06040523480156200001157600080fd5b5060405162001b9f38038062001b9f83398101604081905262000034916200007c565b6001600160a01b038116620000665760405162461bcd60e51b81526004016200005d90620000ac565b60405180910390fd5b60601b6001600160601b031916608052620000d5565b6000602082840312156200008e578081fd5b81516001600160a01b0381168114620000a5578182fd5b9392505050565b6020808252600f908201526e24a72b20a624a22fa6a0a720a3a2a960891b604082015260600190565b60805160601c611aa4620000fb600039600081816106f50152610cf00152611aa46000f3fe608060405234801561001057600080fd5b506004361061012b5760003560e01c8063630b5ba1116100ad578063a85adeab11610071578063a85adeab1461025a578063ae79b32f14610262578063e2949bac1461026a578063e6fd48bc1461027d578063f7c618c1146102855761012b565b8063630b5ba1146101f75780636c28e349146101ff5780637eba26b61461021257806386911a711461022557806393f1a40b146102385761012b565b8063415985c1116100f4578063415985c1146101ac57806342f2d0a8146101c1578063452a9320146101c957806351eb05a6146101d1578063628436bd146101e45761012b565b8062f714ce146101305780630e894127146101455780631526fe27146101585780631653fd331461018457806317caf6f1146101a4575b600080fd5b61014361013e366004611656565b61028d565b005b61014361015336600461167a565b6103da565b61016b610166366004611626565b61050f565b60405161017b94939291906116db565b60405180910390f35b610197610192366004611656565b61055c565b60405161017b9190611961565b6101976106ed565b6101b46106f3565b60405161017b91906116ae565b610197610717565b6101b461071d565b6101436101df366004611626565b61072c565b6101436101f23660046115bd565b61085b565b610143610a7c565b61014361020d366004611568565b610aa7565b6101b4610220366004611626565b610c77565b6101976102333660046114dc565b610ca1565b61024b610246366004611656565b610cb3565b60405161017b9392919061196a565b610197610cdb565b610143610ce1565b6101436102783660046114f8565b610de0565b61019761100b565b6101b4611011565b6001600160a01b0381166102bc5760405162461bcd60e51b81526004016102b3906117b4565b60405180910390fd5b6000600183815481106102df57634e487b7160e01b600052603260045260246000fd5b600091825260208083208684526002825260408085203386529092529220600490910290910191506103108461072c565b6000816002015464e8d4a510008460020154846000015461033191906119e4565b61033b91906119c4565b6103459190611a03565b9050600081836001015461035991906119ac565b90506103658582611026565b6002840154835464e8d4a510009161037c916119e4565b61038691906119c4565b6002840155600060018401556040518690339030907f919fc3589577d8ba8023ca13d0b64eaeb6af31c331b4b81c0d42d66423603077906103ca908a9087906116c2565b60405180910390a4505050505050565b6008546001600160a01b031633146104045760405162461bcd60e51b81526004016102b39061186c565b801561041257610412610a7c565b816001600160801b03166001848154811061043d57634e487b7160e01b600052603260045260246000fd5b6000918252602090912060036004909202010154600554610467916001600160801b031690611a03565b61047191906119ac565b600581905550816001848154811061049957634e487b7160e01b600052603260045260246000fd5b906000526020600020906004020160030160006101000a8154816001600160801b0302191690836001600160801b03160217905550827fdbf8826f955f35a61dc4653bcd92044a5c53564222a205f6d2d3babe80de2c958384426040516105029392919061193d565b60405180910390a2505050565b6001818154811061051f57600080fd5b600091825260209091206004909102018054600182015460028301546003909301546001600160a01b03909216935091906001600160801b031684565b6000806001848154811061058057634e487b7160e01b600052603260045260246000fd5b6000918252602080832060408051608081018252600494850290920180546001600160a01b039081168452600180830154858701526002808401548686019081526003909401546001600160801b03166060808801919091528d8a52818852858a208d85168b528852858a2086519182018752805482529283015481890152910154818501529151845184516318160ddd60e01b8152945195995092979096909592909116936318160ddd93808301939290829003018186803b15801561064657600080fd5b505afa15801561065a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061067e919061163e565b905083602001514211801561069257508015155b156106a4576106a184826111d5565b91505b60208301516040840151845164e8d4a51000906106c29086906119e4565b6106cc91906119c4565b6106d69190611a03565b6106e091906119ac565b9450505050505b92915050565b60055481565b7f000000000000000000000000000000000000000000000000000000000000000081565b60095481565b6008546001600160a01b031681565b60006001828154811061074f57634e487b7160e01b600052603260045260246000fd5b90600052602060002090600402019050806001015442116107705750610858565b8054604080516318160ddd60e01b815290516000926001600160a01b0316916318160ddd916004808301926020929190829003018186803b1580156107b457600080fd5b505afa1580156107c8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107ec919061163e565b905080610800575042600190910155610858565b6040805160808101825283546001600160a01b031681526001840154602082015260028401549181019190915260038301546001600160801b0316606082015261084a90826111d5565b600283015550426001909101555b50565b6008546001600160a01b031633146108855760405162461bcd60e51b81526004016102b39061186c565b801561089357610893610a7c565b600060065442116108a6576006546108a8565b425b905060006108b9602086018661160c565b6001600160801b0316111561094f5761094f6108d8602086018661160c565b846001600160a01b031663360e303a6040518163ffffffff1660e01b815260040160206040518083038186803b15801561091157600080fd5b505afa158015610925573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610949919061154c565b8361126b565b6000610961604086016020870161160c565b6001600160801b031611156109bc576109bc610983604086016020870161160c565b846001600160a01b031663f8d898986040518163ffffffff1660e01b815260040160206040518083038186803b15801561091157600080fd5b60006109ce606086016040870161160c565b6001600160801b03161115610a2957610a296109f0606086016040870161160c565b846001600160a01b031663588785406040518163ffffffff1660e01b815260040160206040518083038186803b15801561091157600080fd5b306001600160a01b0316836001600160a01b03167fd51d6a296a4547c957d8a56b2414719f7e8f2632cd0f4b2e9ab995d864fbd4dd8642604051610a6e9291906118f0565b60405180910390a350505050565b60015460005b81811015610aa357610a938161072c565b610a9c81611a1a565b9050610a82565b5050565b600054610100900460ff1680610ac05750610ac0611465565b80610ace575060005460ff16155b610aea5760405162461bcd60e51b81526004016102b3906117d8565b600054610100900460ff16158015610b15576000805460ff1961ff0019909116610100171660011790555b6001600160a01b038616610b3b5760405162461bcd60e51b81526004016102b39061170a565b6001600160a01b038216610b615760405162461bcd60e51b81526004016102b3906118b9565b60008511610b815760405162461bcd60e51b81526004016102b390611835565b60008411610ba15760405162461bcd60e51b81526004016102b390611731565b60008311610bc15760405162461bcd60e51b81526004016102b390611731565b6000805475ffffffffffffffffffffffffffffffffffffffff00001916620100006001600160a01b0389811691820292909217909255600987905560068690556007859055600880546001600160a01b0319169185169190911790556040517fb669701d3b2742b0ba19740af9a2b7faf3b2bf8f0c099d21f46e9689f01bb08590610c559088908890889088904290611980565b60405180910390a28015610c6f576000805461ff00191690555b505050505050565b60038181548110610c8757600080fd5b6000918252602090912001546001600160a01b0316905081565b60046020526000908152604090205481565b6002602081815260009384526040808520909152918352912080546001820154919092015483565b60075481565b60005b600354811015610dd1577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316635129785d60038381548110610d3e57634e487b7160e01b600052603260045260246000fd5b6000918252602090912001546040517fffffffff0000000000000000000000000000000000000000000000000000000060e084901b168152610d8c916001600160a01b0316906004016116ae565b600060405180830381600087803b158015610da657600080fd5b505af1158015610dba573d6000803e3d6000fd5b505050508080610dc990611a1a565b915050610ce4565b50610dde6003600061148e565b565b6001600160a01b038216610e065760405162461bcd60e51b81526004016102b39061178e565b600754421115610e1557610aa3565b6001600160a01b038216600090815260046020526040902054610e378161072c565b600060018281548110610e5a57634e487b7160e01b600052603260045260246000fd5b600091825260209182902060408051608081018252600490930290910180546001600160a01b039081168452600182015494840194909452600281015491830191909152600301546001600160801b031660608201529150831615610fd15760008281526002602090815260408083206001600160a01b03871684529091529020805415610f2b5760028101546040830151825464e8d4a5100091610efe916119e4565b610f0891906119c4565b610f129190611a03565b816001016000828254610f2591906119ac565b90915550505b6040516370a0823160e01b81526001600160a01b038616906370a0823190610f579087906004016116ae565b60206040518083038186803b158015610f6f57600080fd5b505afa158015610f83573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fa7919061163e565b808255604083015164e8d4a5100091610fc091906119e4565b610fca91906119c4565b6002909101555b81846001600160a01b03167f4c7bb8fbeb9b8e2ec7ea3639ae4cf31d48b2fe0fe81f9f952a2b12fb7642976785604051610a6e91906116ae565b60065481565b6000546201000090046001600160a01b031681565b600080546040516370a0823160e01b8152620100009091046001600160a01b0316906370a082319061105c9030906004016116ae565b60206040518083038186803b15801561107457600080fd5b505afa158015611088573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110ac919061163e565b9050808211156111455760005460405163a9059cbb60e01b8152620100009091046001600160a01b03169063a9059cbb906110ed90869085906004016116c2565b602060405180830381600087803b15801561110757600080fd5b505af115801561111b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061113f9190611530565b506111d0565b60005460405163a9059cbb60e01b8152620100009091046001600160a01b03169063a9059cbb9061117c90869086906004016116c2565b602060405180830381600087803b15801561119657600080fd5b505af11580156111aa573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111ce9190611530565b505b505050565b6000600754836020015111156111f0575060408201516106e7565b600061120084602001514261146b565b9050600060055485606001516001600160801b03166009548461122391906119e4565b61122d91906119e4565b61123791906119c4565b90508361124964e8d4a51000836119e4565b61125391906119c4565b856040015161126291906119ac565b95945050505050565b6001600160a01b0382166112915760405162461bcd60e51b81526004016102b390611893565b6001600160a01b038216600090815260046020526040902054156112c75760405162461bcd60e51b81526004016102b390611768565b826001600160801b03166005546112de91906119ac565b600555604080516080810182526001600160a01b0384811682526020820184815260009383018481526001600160801b03888116606086019081526001805480820182559781905295517fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf6600490980297880180546001600160a01b031916919096161790945591517fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf7860155517fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf885015590517fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf990930180546fffffffffffffffffffffffffffffffff1916939091169290921790915580546114029190611a03565b6001600160a01b039092166000818152600460205260408120939093556003805460018101825593527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b90920180546001600160a01b0319169092179091555050565b303b1590565b600060075482111561147d5760075491505b6114878383611a03565b9392505050565b508054600082559060005260206000209081019061085891905b808211156114bc57600081556001016114a8565b5090565b80356001600160801b03811681146114d757600080fd5b919050565b6000602082840312156114ed578081fd5b813561148781611a4b565b6000806040838503121561150a578081fd5b823561151581611a4b565b9150602083013561152581611a4b565b809150509250929050565b600060208284031215611541578081fd5b815161148781611a60565b60006020828403121561155d578081fd5b815161148781611a4b565b600080600080600060a0868803121561157f578081fd5b853561158a81611a4b565b945060208601359350604086013592506060860135915060808601356115af81611a4b565b809150509295509295909350565b600080600083850360a08112156115d2578384fd5b60608112156115df578384fd5b5083925060608401356115f181611a4b565b9150608084013561160181611a60565b809150509250925092565b60006020828403121561161d578081fd5b611487826114c0565b600060208284031215611637578081fd5b5035919050565b60006020828403121561164f578081fd5b5051919050565b60008060408385031215611668578182fd5b82359150602083013561152581611a4b565b60008060006060848603121561168e578283fd5b8335925061169e602085016114c0565b9150604084013561160181611a60565b6001600160a01b0391909116815260200190565b6001600160a01b03929092168252602082015260400190565b6001600160a01b03949094168452602084019290925260408301526001600160801b0316606082015260800190565b6020808252600d908201526c24a72b20a624a22faa27a5a2a760991b604082015260600190565b60208082526011908201527f494e56414c49445f54494d455354414d50000000000000000000000000000000604082015260600190565b6020808252600c908201526b746f6b656e5f65786973747360a01b604082015260600190565b6020808252600c908201526b24a72b20a624a22fa0a2222960a11b604082015260600190565b6020808252600a9082015269494e56414c49445f544f60b01b604082015260600190565b6020808252602e908201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160408201527f647920696e697469616c697a6564000000000000000000000000000000000000606082015260800190565b60208082526012908201527f494e56414c49445f444953545249425554450000000000000000000000000000604082015260600190565b6020808252600d908201526c27a7262cafa3aaa0a92224a0a760991b604082015260600190565b6020808252600c908201526b34b73b30b634b22fb0b2323960a11b604082015260600190565b60208082526010908201527f494e56414c49445f475541524449414e00000000000000000000000000000000604082015260600190565b608081016001600160801b0380611906866114c0565b16835280611916602087016114c0565b16602084015280611929604087016114c0565b166040840152508260608301529392505050565b6001600160801b039384168152919092166020820152604081019190915260600190565b90815260200190565b9283526020830191909152604082015260600190565b948552602085019390935260408401919091526001600160a01b03166060830152608082015260a00190565b600082198211156119bf576119bf611a35565b500190565b6000826119df57634e487b7160e01b81526012600452602481fd5b500490565b60008160001904831182151516156119fe576119fe611a35565b500290565b600082821015611a1557611a15611a35565b500390565b6000600019821415611a2e57611a2e611a35565b5060010190565b634e487b7160e01b600052601160045260246000fd5b6001600160a01b038116811461085857600080fd5b801515811461085857600080fdfea264697066735822122017aef1689b1b4003a915efbad5289cd34b7e72ba88e26c850a67f6a97a7d8a8564736f6c63430008010033";
