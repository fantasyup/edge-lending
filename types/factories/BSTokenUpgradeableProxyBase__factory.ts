/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";

import type { BSTokenUpgradeableProxyBase } from "../BSTokenUpgradeableProxyBase";

export class BSTokenUpgradeableProxyBase__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<BSTokenUpgradeableProxyBase> {
    return super.deploy(
      overrides || {}
    ) as Promise<BSTokenUpgradeableProxyBase>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): BSTokenUpgradeableProxyBase {
    return super.attach(address) as BSTokenUpgradeableProxyBase;
  }
  connect(signer: Signer): BSTokenUpgradeableProxyBase__factory {
    return super.connect(signer) as BSTokenUpgradeableProxyBase__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): BSTokenUpgradeableProxyBase {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as BSTokenUpgradeableProxyBase;
  }
}

const _abi = [
  {
    stateMutability: "payable",
    type: "fallback",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "initialAddress",
        type: "address",
      },
    ],
    name: "initializeProxy",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061039c806100206000396000f3fe6080604052600436106100225760003560e01c80634a0687ef1461003b57610031565b366100315761002f610064565b005b610039610064565b005b34801561004757600080fd5b50610062600480360381019061005d919061020b565b61007e565b005b61006c610170565b61007c610077610172565b610181565b565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156100ee576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100e59061029a565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff1661010e6101a7565b73ffffffffffffffffffffffffffffffffffffffff1614610164576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161015b9061027a565b60405180910390fd5b61016d816101d0565b50565b565b600061017c6101a7565b905090565b3660008037600080366000845af43d6000803e80600081146101a2573d6000f35b3d6000fd5b60007f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc54905090565b807f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5550565b6000813590506102058161034f565b92915050565b60006020828403121561021d57600080fd5b600061022b848285016101f6565b91505092915050565b6000610241601e836102ba565b915061024c826102fd565b602082019050919050565b60006102646017836102ba565b915061026f82610326565b602082019050919050565b6000602082019050818103600083015261029381610234565b9050919050565b600060208201905081810360008301526102b381610257565b9050919050565b600082825260208201905092915050565b60006102d6826102dd565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b7f5555505350726f78793a20616c726561647920696e697469616c697a65640000600082015250565b7f5555505350726f78793a207a65726f2061646472657373000000000000000000600082015250565b610358816102cb565b811461036357600080fd5b5056fea26469706673582212208599e0c884c20062d25ceb6e7f7ed10bad722f18a17bff99b3256430ea06038664736f6c63430008010033";
