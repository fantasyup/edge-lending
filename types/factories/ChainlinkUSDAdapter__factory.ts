/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";

import type { ChainlinkUSDAdapter } from "../ChainlinkUSDAdapter";

export class ChainlinkUSDAdapter__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    _asset: string,
    _aggregator: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ChainlinkUSDAdapter> {
    return super.deploy(
      _asset,
      _aggregator,
      overrides || {}
    ) as Promise<ChainlinkUSDAdapter>;
  }
  getDeployTransaction(
    _asset: string,
    _aggregator: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_asset, _aggregator, overrides || {});
  }
  attach(address: string): ChainlinkUSDAdapter {
    return super.attach(address) as ChainlinkUSDAdapter;
  }
  connect(signer: Signer): ChainlinkUSDAdapter__factory {
    return super.connect(signer) as ChainlinkUSDAdapter__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ChainlinkUSDAdapter {
    return new Contract(address, _abi, signerOrProvider) as ChainlinkUSDAdapter;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_asset",
        type: "address",
      },
      {
        internalType: "contract IChainlinkV3Aggregator",
        name: "_aggregator",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "asset",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newPrice",
        type: "uint256",
      },
    ],
    name: "PriceUpdated",
    type: "event",
  },
  {
    inputs: [],
    name: "aggregator",
    outputs: [
      {
        internalType: "contract IChainlinkV3Aggregator",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "asset",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getPriceInUSD",
    outputs: [
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "viewPriceInUSD",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60c060405234801561001057600080fd5b5060405161039138038061039183398101604081905261002f9161004d565b6001600160601b0319606092831b8116608052911b1660a05261009e565b6000806040838503121561005f578182fd5b825161006a81610086565b602084015190925061007b81610086565b809150509250929050565b6001600160a01b038116811461009b57600080fd5b50565b60805160601c60a05160601c6102bd6100d4600039600081816096015260e101526000818160ba01526101a301526102bd6000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c8063245a7bfc1461005157806338d52e0f1461006f578063e1aa603614610077578063f55fa17f1461008c575b600080fd5b610059610094565b6040516100669190610251565b60405180910390f35b6100596100b8565b61007f6100dc565b604051610066919061027e565b61007f6101dd565b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000081565b6000807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561013857600080fd5b505afa15801561014c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101709190610202565b505050915050809150816000819055507f0d86730737b142fc160892fa8a0f2db687a92a0e294d1ad70624cf5acef03b847f0000000000000000000000000000000000000000000000000000000000000000836040516101d1929190610265565b60405180910390a15090565b60005490565b805169ffffffffffffffffffff811681146101fd57600080fd5b919050565b600080600080600060a08688031215610219578081fd5b610222866101e3565b9450602086015193506040860151925060608601519150610245608087016101e3565b90509295509295909350565b6001600160a01b0391909116815260200190565b6001600160a01b03929092168252602082015260400190565b9081526020019056fea26469706673582212208e8e30fcb104d512462ef863aed5e51705242870e9ce2dd608180288b66cd1a064736f6c63430008010033";
