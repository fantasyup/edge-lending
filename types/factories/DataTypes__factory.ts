/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";

import type { DataTypes } from "../DataTypes";

export class DataTypes__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<DataTypes> {
    return super.deploy(overrides || {}) as Promise<DataTypes>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): DataTypes {
    return super.attach(address) as DataTypes;
  }
  connect(signer: Signer): DataTypes__factory {
    return super.connect(signer) as DataTypes__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): DataTypes {
    return new Contract(address, _abi, signerOrProvider) as DataTypes;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "c__0xe39ebf19",
        type: "bytes32",
      },
    ],
    name: "c_0xe39ebf19",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "contract IInterestRateModel",
            name: "interestRate",
            type: "IInterestRateModel",
          },
          {
            internalType: "uint256",
            name: "initialExchangeRateMantissa",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "reserveFactorMantissa",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "collateralFactor",
            type: "uint256",
          },
          {
            internalType: "contract IBSWrapperToken",
            name: "wrappedBorrowAsset",
            type: "IBSWrapperToken",
          },
          {
            internalType: "uint256",
            name: "liquidationFee",
            type: "uint256",
          },
          {
            internalType: "contract IBSWrapperToken",
            name: "debtToken",
            type: "IBSWrapperToken",
          },
        ],
        internalType: "struct DataTypes.BorrowAssetConfig",
        name: "self",
        type: "tuple",
      },
    ],
    name: "validBorrowAssetConfig",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
];

const _bytecode =
  "0x610cfe610053600b82828239805160001a607314610046577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600436106100405760003560e01c80630b15696b14610045578063ced7744d14610061575b600080fd5b61005f600480360381019061005a91906108f5565b61007d565b005b61007b6004803603810190610076919061087a565b61081d565b005b6100a97f672c3f1f5592d68caaba17c21c2c4cbe5b5208c0643d7223964753353852f05b60001b61081d565b6100d57f6a296c4eb943caa4f8a60878fdaa84d578b775519f8d805ec77ecb67113379a560001b61081d565b6101017f17a937172624558bd090383cc2f7306317ebdb9d1680611b01cbb0e16d09fe9360001b61081d565b61012d7f1513a1184960225577eb59ca36685996478f35eb305d0393aaa25ba03b9d874860001b61081d565b600073ffffffffffffffffffffffffffffffffffffffff1681600001602081019061015891906108cc565b73ffffffffffffffffffffffffffffffffffffffff1614156101af576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101a690610a73565b60405180910390fd5b6101db7f788caa1f2456cc1802f279e88485980d6c81716dca0c5ab58257aaaaa43cc1a360001b61081d565b6102077fba1d6a1daf3edcb0dba44cc035863e56856fdd8c204870613b1741f97c32bc5c60001b61081d565b6102337f68e83f6ec82d992bc5bb647728abcaaa3c94d04dbc61ae8a5b3eb0e86a86ef0c60001b61081d565b61025f7fdc8f7f9533520c98e8f7966772343f447515e159557434652fb0098b944a636860001b61081d565b60008160200135116102a6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161029d90610a93565b60405180910390fd5b6102d27fd0db4da5b49f17a3aa1fb11a1af525b5a19f9b64aaf343ad394587b27489b53f60001b61081d565b6102fe7f5585fc80ccb2bb5e24ad1302d8276f7d2a3c1a28d84afd65d321c2663dab2e2560001b61081d565b6103297ef011503f5a2b035a552b21cd872dc99c197e5358d60e9433363d94ee5f77af60001b61081d565b6103557f88dc1c15720881102bcc2baa40bcfc54c5d30606c546010c05f8cedcd00cf42960001b61081d565b600081604001351161039c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161039390610ab3565b60405180910390fd5b6103c87f7b7945ca3df8de0d3449d64c9a4a35edcccf9eeefbf2b02b280008fa18c227c360001b61081d565b6103f47f07ff633ff5994a41399a8b69ebe180ae47b445583f6273e74ebe021727e06f5660001b61081d565b6104207f14ca64ab4c288298b4630627a0a1e639bd69e80149f5d3dbfdc9a8032795dcdc60001b61081d565b61044c7f8ff8bb9047ccb8a6619e05e773e15f7c900338c0d751f027cb91ca9a2cb8a44f60001b61081d565b6000816060013511610493576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161048a90610a13565b60405180910390fd5b6104bf7ff86826849ad5bf9a689126cd76608e023017a7bb3542f41c1836415d0ccada6760001b61081d565b6104eb7f39decf524b799f276bb9255a294ab31d9cea88138373b4c747d90f0c3bb7590160001b61081d565b6105177fe2ce3b16d8b5f76981a592cba096096b119ac5b3a40b4a1c65728326b1fa9a9160001b61081d565b6105437f4d5a758bbbc6d4d865637db6991a26f70571e69bd947f80360363db1f505801d60001b61081d565b60008160a001351161058a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161058190610ad3565b60405180910390fd5b6105b67f92f022a30a0c5d09a21c6674d0d1d6f2e02ff172aded48c28523ddaa682a72de60001b61081d565b6105e27f6c5bf04e12cdd3b5c81a4a437e417ae18ed1df9a096acc9e681c66db6c290d9360001b61081d565b61060e7f3edf55b948c7a11901294e6326903ab0b30c1d2caaba5412f39c0535d0cc896f60001b61081d565b61063a7f69514081d2c6e4a3432444253ef58f319a63627f0b29643445a642b6df243fa760001b61081d565b600073ffffffffffffffffffffffffffffffffffffffff1681608001602081019061066591906108a3565b73ffffffffffffffffffffffffffffffffffffffff1614156106bc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106b390610a33565b60405180910390fd5b6106e87f73292e4fe9fc2da50a2d042dd72e4b90a944e72fc8347f5102bce13d6a0602b860001b61081d565b6107147f2df4e88a6ac8622b38ddf3ffb8f5516278dada139e40407ec00a87d44e5e3bcc60001b61081d565b6107407fd9270706f31a944fefbc1655bf30cb274053cff7be76a42297dccc16be03f86e60001b61081d565b61076c7f553ab480ba1b8076f6d9ad98cd47784871f99fd6d796aeba24a3c6fc20d4a5cc60001b61081d565b600073ffffffffffffffffffffffffffffffffffffffff168160c001602081019061079791906108a3565b73ffffffffffffffffffffffffffffffffffffffff1614156107ee576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107e590610a53565b60405180910390fd5b61081a7f506cb94892c71372beb139d035697cba93aa1400d8e1abedc9660fedd71edb2660001b61081d565b50565b50565b60008135905061082f81610c83565b92915050565b60008135905061084481610c9a565b92915050565b60008135905061085981610cb1565b92915050565b600060e0828403121561087157600080fd5b81905092915050565b60006020828403121561088c57600080fd5b600061089a84828501610820565b91505092915050565b6000602082840312156108b557600080fd5b60006108c384828501610835565b91505092915050565b6000602082840312156108de57600080fd5b60006108ec8482850161084a565b91505092915050565b600060e0828403121561090757600080fd5b60006109158482850161085f565b91505092915050565b600061092b600283610af3565b915061093682610b64565b602082019050919050565b600061094e600383610af3565b915061095982610b8d565b602082019050919050565b6000610971600383610af3565b915061097c82610bb6565b602082019050919050565b6000610994600283610af3565b915061099f82610bdf565b602082019050919050565b60006109b7600283610af3565b91506109c282610c08565b602082019050919050565b60006109da600283610af3565b91506109e582610c31565b602082019050919050565b60006109fd600283610af3565b9150610a0882610c5a565b602082019050919050565b60006020820190508181036000830152610a2c8161091e565b9050919050565b60006020820190508181036000830152610a4c81610941565b9050919050565b60006020820190508181036000830152610a6c81610964565b9050919050565b60006020820190508181036000830152610a8c81610987565b9050919050565b60006020820190508181036000830152610aac816109aa565b9050919050565b60006020820190508181036000830152610acc816109cd565b9050919050565b60006020820190508181036000830152610aec816109f0565b9050919050565b600082825260208201905092915050565b6000610b0f82610b44565b9050919050565b6000819050919050565b6000610b2b82610b04565b9050919050565b6000610b3d82610b04565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b7f4943000000000000000000000000000000000000000000000000000000000000600082015250565b7f4957420000000000000000000000000000000000000000000000000000000000600082015250565b7f4944420000000000000000000000000000000000000000000000000000000000600082015250565b7f4952000000000000000000000000000000000000000000000000000000000000600082015250565b7f4945000000000000000000000000000000000000000000000000000000000000600082015250565b7f4946000000000000000000000000000000000000000000000000000000000000600082015250565b7f494c000000000000000000000000000000000000000000000000000000000000600082015250565b610c8c81610b16565b8114610c9757600080fd5b50565b610ca381610b20565b8114610cae57600080fd5b50565b610cba81610b32565b8114610cc557600080fd5b5056fea264697066735822122004f05470fee95f1e39b923fcd458df21a9bfb8fc6356a1ed7f71bbbd5cad814d64736f6c63430008010033";
