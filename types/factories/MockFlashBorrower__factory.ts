/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";

import type { MockFlashBorrower } from "../MockFlashBorrower";

export class MockFlashBorrower__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<MockFlashBorrower> {
    return super.deploy(overrides || {}) as Promise<MockFlashBorrower>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): MockFlashBorrower {
    return super.attach(address) as MockFlashBorrower;
  }
  connect(signer: Signer): MockFlashBorrower__factory {
    return super.connect(signer) as MockFlashBorrower__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MockFlashBorrower {
    return new Contract(address, _abi, signerOrProvider) as MockFlashBorrower;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_lender",
        type: "address",
      },
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "borrow",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_initiator",
        type: "address",
      },
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_fees",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "onFlashLoan",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506107b3806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c806323e30c8b1461003b5780635224372c1461006b575b600080fd5b61005560048036038101906100509190610372565b610087565b60405161006291906104fb565b60405180910390f35b61008560048036038101906100809190610323565b610205565b005b60008073ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff1614156100f8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100ef90610580565b60405180910390fd5b600083839050101561013f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161013690610560565b60405180910390fd5b8573ffffffffffffffffffffffffffffffffffffffff1663095ea7b333868861016891906105c2565b6040518363ffffffff1660e01b81526004016101859291906104d2565b602060405180830381600087803b15801561019f57600080fd5b505af11580156101b3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101d79190610404565b507f439148f0bbc682ca079e46d6e2c2f0c1e3b820f1a291b069d8882abf8cf18dd990509695505050505050565b8273ffffffffffffffffffffffffffffffffffffffff16635cffe9de3084846040518463ffffffff1660e01b815260040161024293929190610516565b602060405180830381600087803b15801561025c57600080fd5b505af1158015610270573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102949190610404565b50505050565b6000813590506102a981610738565b92915050565b6000815190506102be8161074f565b92915050565b60008083601f8401126102d657600080fd5b8235905067ffffffffffffffff8111156102ef57600080fd5b60208301915083600182028301111561030757600080fd5b9250929050565b60008135905061031d81610766565b92915050565b60008060006060848603121561033857600080fd5b60006103468682870161029a565b93505060206103578682870161029a565b92505060406103688682870161030e565b9150509250925092565b60008060008060008060a0878903121561038b57600080fd5b600061039989828a0161029a565b96505060206103aa89828a0161029a565b95505060406103bb89828a0161030e565b94505060606103cc89828a0161030e565b935050608087013567ffffffffffffffff8111156103e957600080fd5b6103f589828a016102c4565b92509250509295509295509295565b60006020828403121561041657600080fd5b6000610424848285016102af565b91505092915050565b61043681610618565b82525050565b61044581610636565b82525050565b6104548161066a565b82525050565b60006104676002836105a0565b9150610472826106bd565b602082019050919050565b600061048a6008836105b1565b9150610495826106e6565b602082019050919050565b60006104ad600b836105b1565b91506104b88261070f565b602082019050919050565b6104cc81610660565b82525050565b60006040820190506104e7600083018561042d565b6104f460208301846104c3565b9392505050565b6000602082019050610510600083018461043c565b92915050565b600060808201905061052b600083018661044b565b610538602083018561042d565b61054560408301846104c3565b81810360608301526105568161045a565b9050949350505050565b600060208201905081810360008301526105798161047d565b9050919050565b60006020820190508181036000830152610599816104a0565b9050919050565b600082825260208201905092915050565b600082825260208201905092915050565b60006105cd82610660565b91506105d883610660565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561060d5761060c61068e565b5b828201905092915050565b600061062382610640565b9050919050565b60008115159050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006106758261067c565b9050919050565b600061068782610640565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f3078000000000000000000000000000000000000000000000000000000000000600082015250565b7f64617461203c2030000000000000000000000000000000000000000000000000600082015250565b7f73656e6465722069732030000000000000000000000000000000000000000000600082015250565b61074181610618565b811461074c57600080fd5b50565b6107588161062a565b811461076357600080fd5b50565b61076f81610660565b811461077a57600080fd5b5056fea264697066735822122028c0433ca38bc57bdf93b71556246caaf351532f8d6dc6be1dd2f64e2fab3f0464736f6c63430008010033";
