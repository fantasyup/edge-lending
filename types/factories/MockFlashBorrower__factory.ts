/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";

import type { MockFlashBorrower } from "../MockFlashBorrower";

export class MockFlashBorrower__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<MockFlashBorrower> {
    return super.deploy(overrides || {}) as Promise<MockFlashBorrower>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): MockFlashBorrower {
    return super.attach(address) as MockFlashBorrower;
  }
  connect(signer: Signer): MockFlashBorrower__factory {
    return super.connect(signer) as MockFlashBorrower__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MockFlashBorrower {
    return new Contract(address, _abi, signerOrProvider) as MockFlashBorrower;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_lender",
        type: "address",
      },
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "borrow",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "c__0x9f152e50",
        type: "bytes32",
      },
    ],
    name: "c_0x9f152e50",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_initiator",
        type: "address",
      },
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_fees",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "onFlashLoan",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610af3806100206000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c806323e30c8b146100465780635224372c1461007657806359ddc8ae14610092575b600080fd5b610060600480360381019061005b9190610672565b6100ae565b60405161006d9190610824565b60405180910390f35b610090600480360381019061008b9190610623565b610469565b005b6100ac60048036038101906100a7919061072d565b610582565b005b60006100dc7f8ebf76da5b464c0a6de451a7f46061a5262fa5acb45aee7f856b1b590892e22f60001b610582565b6101087ff312a270d586c6fbe8451da49ecd4d17cfd33779219b87f5f8ee634452ab7ec360001b610582565b6101347fda346d0c1729c49488190437290bcde756f716045d2a7edd864480a1d460446360001b610582565b6101607ff18f96b0ca59ea7a629ff9af90d7422369a96348d1fa5d9914c7f8f2972d3cf860001b610582565b600073ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff1614156101d0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101c7906108a9565b60405180910390fd5b6101fc7fa5ea20c021d06686ec8095d39d8e534b529d96bd5e39513c4dbe6be5f808802260001b610582565b6102287fad79cfc0c82f64177fc6bea547c59892067305dcafa908f0248260f89a87bdff60001b610582565b6102547fc956622e7fd9e75ef3854f7dbb8d95865652a8805fea9f4e1ee23571a0ddaadb60001b610582565b6102807fb41297b5f929f168d445e069e1fee9e61b0e2fb5401bd0775878bfbaa57960f760001b610582565b60008383905010156102c7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102be90610889565b60405180910390fd5b6102f37f900eb7652774a23a00a2b998ac851677854f0f84b0da5b1f1759442ae3f5c02f60001b610582565b61031f7f6e2a99760a52bdb0e7198e25b1e5fb1076c434f96c7081a030dca859ebb1bde460001b610582565b61034b7f921e116d367e12e7bddc37acbdce6eae1f97925463d82219d5f97d8b7d69367860001b610582565b8573ffffffffffffffffffffffffffffffffffffffff1663095ea7b333868861037491906108eb565b6040518363ffffffff1660e01b81526004016103919291906107fb565b602060405180830381600087803b1580156103ab57600080fd5b505af11580156103bf573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103e39190610704565b506104107ff96e44d0db7caa7e9f268cf73a5438595486729c6ce20819180891d7b09eaa0960001b610582565b61043c7f6db35476e8c4e5c469c02a9cd553dda858096006cfc40d43fa80308d68fdd15760001b610582565b7f439148f0bbc682ca079e46d6e2c2f0c1e3b820f1a291b069d8882abf8cf18dd990509695505050505050565b6104957f488ee31cdb0fb4371a20034099724cc90b567716d522028e7e8ee7cadb211d4460001b610582565b6104c17fb3e98811a3070292d33c9154fee2538897b3d1153eece2588df4e42ded60f0bb60001b610582565b6104ed7fcc2380240d73e74921244a32fe5d343c027a86f3621829425e3017279fb6490b60001b610582565b8273ffffffffffffffffffffffffffffffffffffffff16635cffe9de3084846040518463ffffffff1660e01b815260040161052a9392919061083f565b602060405180830381600087803b15801561054457600080fd5b505af1158015610558573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061057c9190610704565b50505050565b50565b60008135905061059481610a61565b92915050565b6000815190506105a981610a78565b92915050565b6000813590506105be81610a8f565b92915050565b60008083601f8401126105d657600080fd5b8235905067ffffffffffffffff8111156105ef57600080fd5b60208301915083600182028301111561060757600080fd5b9250929050565b60008135905061061d81610aa6565b92915050565b60008060006060848603121561063857600080fd5b600061064686828701610585565b935050602061065786828701610585565b92505060406106688682870161060e565b9150509250925092565b60008060008060008060a0878903121561068b57600080fd5b600061069989828a01610585565b96505060206106aa89828a01610585565b95505060406106bb89828a0161060e565b94505060606106cc89828a0161060e565b935050608087013567ffffffffffffffff8111156106e957600080fd5b6106f589828a016105c4565b92509250509295509295509295565b60006020828403121561071657600080fd5b60006107248482850161059a565b91505092915050565b60006020828403121561073f57600080fd5b600061074d848285016105af565b91505092915050565b61075f81610941565b82525050565b61076e8161095f565b82525050565b61077d81610993565b82525050565b60006107906002836108c9565b915061079b826109e6565b602082019050919050565b60006107b36008836108da565b91506107be82610a0f565b602082019050919050565b60006107d6600b836108da565b91506107e182610a38565b602082019050919050565b6107f581610989565b82525050565b60006040820190506108106000830185610756565b61081d60208301846107ec565b9392505050565b60006020820190506108396000830184610765565b92915050565b60006080820190506108546000830186610774565b6108616020830185610756565b61086e60408301846107ec565b818103606083015261087f81610783565b9050949350505050565b600060208201905081810360008301526108a2816107a6565b9050919050565b600060208201905081810360008301526108c2816107c9565b9050919050565b600082825260208201905092915050565b600082825260208201905092915050565b60006108f682610989565b915061090183610989565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610936576109356109b7565b5b828201905092915050565b600061094c82610969565b9050919050565b60008115159050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600061099e826109a5565b9050919050565b60006109b082610969565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f3078000000000000000000000000000000000000000000000000000000000000600082015250565b7f64617461203c2030000000000000000000000000000000000000000000000000600082015250565b7f73656e6465722069732030000000000000000000000000000000000000000000600082015250565b610a6a81610941565b8114610a7557600080fd5b50565b610a8181610953565b8114610a8c57600080fd5b50565b610a988161095f565b8114610aa357600080fd5b50565b610aaf81610989565b8114610aba57600080fd5b5056fea26469706673582212205fa230fd93a8dcac2993f1f82567e12c45b0263d796fc1d94dd26f9ce23e4efc64736f6c63430008010033";
