/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";

import type { MockFlashBorrower } from "../MockFlashBorrower";

export class MockFlashBorrower__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<MockFlashBorrower> {
    return super.deploy(overrides || {}) as Promise<MockFlashBorrower>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): MockFlashBorrower {
    return super.attach(address) as MockFlashBorrower;
  }
  connect(signer: Signer): MockFlashBorrower__factory {
    return super.connect(signer) as MockFlashBorrower__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MockFlashBorrower {
    return new Contract(address, _abi, signerOrProvider) as MockFlashBorrower;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_lender",
        type: "address",
      },
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "borrow",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "c__0x9f152e50",
        type: "bytes32",
      },
    ],
    name: "c_0x9f152e50",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_initiator",
        type: "address",
      },
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_fees",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "onFlashLoan",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610d3e806100206000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c806323e30c8b146100465780635224372c1461007657806359ddc8ae14610092575b600080fd5b610060600480360381019061005b9190610894565b6100ae565b60405161006d9190610a6f565b60405180910390f35b610090600480360381019061008b9190610845565b610676565b005b6100ac60048036038101906100a79190610978565b61078f565b005b60006100dc7fc2ff5bc469bb1911f23d98b949a361011713be9e1209ad5a6c9d395b6adbbaf660001b61078f565b6101077ee548f2b0a639ae025c037bb4e0b25ba43fd1032d0098386ef1140a40312a7760001b61078f565b6101337fe083e9739a45b40f08fbcbc5ebeedf341b02256bf52ddd4d3689c713747a16de60001b61078f565b61015f7f5217d585eeb4cd5e86d251b36e8c243986d53aeb8bc8fa70bff669532e10c51b60001b61078f565b600073ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff1614156101cf576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101c690610af4565b60405180910390fd5b6101fb7fcf923156032ac46ea4f12b28ba3eba50cac6aa689fd0231de425934c751e5b6c60001b61078f565b6102277ffc00ba523306b1ffac6de984791c4278a09f0adf15d0b8c264b08b214e47c7d760001b61078f565b6102537f737d7875c2b9c1ab13f41588f29dc4ae276d6c976eb4151a7fe3472fcb9bdc4060001b61078f565b61027f7f0d9f8210fe055facfbb48b74675a92d52e5e0fdf4403498fc6e8a019e0e5758160001b61078f565b60008383905010156102c6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102bd90610ad4565b60405180910390fd5b6102f27fba07b33391a8e3b063ddb6a5c0312fd6895c2418ac482bbd1a2cd22ac4b0ec6160001b61078f565b61031e7f775421dec606f13581dc0a93c10f6e476c600529283cd88bc8f86dfa8ffe15a460001b61078f565b61034a7fd466ecb433496d1bbb6f4310ec0d6c744b497ffc5eeed8b7320d2afd96e67f1360001b61078f565b6000838381019061035b9190610926565b90506103897fed08ae4796640c3ae73e492a8ac72118486eefa088ae882ecf59e9fda6f16a1260001b61078f565b6103b57fe07ab9fb59ac9c03f70315d9e6de2fd7cdbe2583e9b92dfbe293739bcc1f900c60001b61078f565b80156104dd576103e77f163380bc382f0dc65d9b35aaa7ee8ab58be54c7d77b151a94ee3940a28013f3a60001b61078f565b6104137f0fbe1fe007225f2968f11ac3faf4e338272a0b6d8b550b6ad3a8643533962ecd60001b61078f565b61043f7ff35583fc16a0c3748e84a492975fb4f500c641205251fe8a902856963f10eda060001b61078f565b8673ffffffffffffffffffffffffffffffffffffffff1663095ea7b33387896104689190610b36565b6040518363ffffffff1660e01b8152600401610485929190610a46565b602060405180830381600087803b15801561049f57600080fd5b505af11580156104b3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104d7919061094f565b506105f0565b6105097f1eeac8a996230208d46f32c81650f4331de79277f55025b28724b2341b7c6e4560001b61078f565b6105357f6478d17e5f424c3d2845f49835bdace229f5e4dc362f72508a762eac9a78f06560001b61078f565b6105617f78cb049aece50d36a7d6fe8b9fca1c135d59dea42aceff29728ba2365e9236ee60001b61078f565b8673ffffffffffffffffffffffffffffffffffffffff1663095ea7b333886040518363ffffffff1660e01b815260040161059c929190610a46565b602060405180830381600087803b1580156105b657600080fd5b505af11580156105ca573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105ee919061094f565b505b61061c7ffbcb45ccc42996d776528936284b65d7edbb8ccb4dc2e6363a52f25a4da594ac60001b61078f565b6106487f374ca0526918d3648ed413e2d0c767d54fc05229b0f5a85a8a553bb69470690260001b61078f565b7f439148f0bbc682ca079e46d6e2c2f0c1e3b820f1a291b069d8882abf8cf18dd99150509695505050505050565b6106a27f225920a06855c89c82c85f1aae85060147414cff83cfb30a04496ca6a22f0ac860001b61078f565b6106ce7f8ebf76da5b464c0a6de451a7f46061a5262fa5acb45aee7f856b1b590892e22f60001b61078f565b6106fa7ff312a270d586c6fbe8451da49ecd4d17cfd33779219b87f5f8ee634452ab7ec360001b61078f565b8273ffffffffffffffffffffffffffffffffffffffff16635cffe9de3084846040518463ffffffff1660e01b815260040161073793929190610a8a565b602060405180830381600087803b15801561075157600080fd5b505af1158015610765573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610789919061094f565b50505050565b50565b6000813590506107a181610cac565b92915050565b6000813590506107b681610cc3565b92915050565b6000815190506107cb81610cc3565b92915050565b6000813590506107e081610cda565b92915050565b60008083601f8401126107f857600080fd5b8235905067ffffffffffffffff81111561081157600080fd5b60208301915083600182028301111561082957600080fd5b9250929050565b60008135905061083f81610cf1565b92915050565b60008060006060848603121561085a57600080fd5b600061086886828701610792565b935050602061087986828701610792565b925050604061088a86828701610830565b9150509250925092565b60008060008060008060a087890312156108ad57600080fd5b60006108bb89828a01610792565b96505060206108cc89828a01610792565b95505060406108dd89828a01610830565b94505060606108ee89828a01610830565b935050608087013567ffffffffffffffff81111561090b57600080fd5b61091789828a016107e6565b92509250509295509295509295565b60006020828403121561093857600080fd5b6000610946848285016107a7565b91505092915050565b60006020828403121561096157600080fd5b600061096f848285016107bc565b91505092915050565b60006020828403121561098a57600080fd5b6000610998848285016107d1565b91505092915050565b6109aa81610b8c565b82525050565b6109b981610baa565b82525050565b6109c881610bde565b82525050565b60006109db600283610b14565b91506109e682610c31565b602082019050919050565b60006109fe600883610b25565b9150610a0982610c5a565b602082019050919050565b6000610a21600b83610b25565b9150610a2c82610c83565b602082019050919050565b610a4081610bd4565b82525050565b6000604082019050610a5b60008301856109a1565b610a686020830184610a37565b9392505050565b6000602082019050610a8460008301846109b0565b92915050565b6000608082019050610a9f60008301866109bf565b610aac60208301856109a1565b610ab96040830184610a37565b8181036060830152610aca816109ce565b9050949350505050565b60006020820190508181036000830152610aed816109f1565b9050919050565b60006020820190508181036000830152610b0d81610a14565b9050919050565b600082825260208201905092915050565b600082825260208201905092915050565b6000610b4182610bd4565b9150610b4c83610bd4565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610b8157610b80610c02565b5b828201905092915050565b6000610b9782610bb4565b9050919050565b60008115159050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000610be982610bf0565b9050919050565b6000610bfb82610bb4565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f3078000000000000000000000000000000000000000000000000000000000000600082015250565b7f64617461203c2030000000000000000000000000000000000000000000000000600082015250565b7f73656e6465722069732030000000000000000000000000000000000000000000600082015250565b610cb581610b8c565b8114610cc057600080fd5b50565b610ccc81610b9e565b8114610cd757600080fd5b50565b610ce381610baa565b8114610cee57600080fd5b50565b610cfa81610bd4565b8114610d0557600080fd5b5056fea26469706673582212203600bc5f3b9bd0629f945050d772db0cd31ce8a1d2b4856d284f5fee51f1bc5164736f6c63430008010033";
