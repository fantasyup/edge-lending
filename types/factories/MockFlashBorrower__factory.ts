/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";

import type { MockFlashBorrower } from "../MockFlashBorrower";

export class MockFlashBorrower__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<MockFlashBorrower> {
    return super.deploy(overrides || {}) as Promise<MockFlashBorrower>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): MockFlashBorrower {
    return super.attach(address) as MockFlashBorrower;
  }
  connect(signer: Signer): MockFlashBorrower__factory {
    return super.connect(signer) as MockFlashBorrower__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MockFlashBorrower {
    return new Contract(address, _abi, signerOrProvider) as MockFlashBorrower;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_lender",
        type: "address",
      },
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "borrow",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_initiator",
        type: "address",
      },
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_fees",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "onFlashLoan",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506104ad806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c806323e30c8b1461003b5780635224372c14610064575b600080fd5b61004e6100493660046102dd565b610079565b60405161005b91906103d6565b60405180910390f35b6100776100723660046102a2565b6101fe565b005b60006001600160a01b0387166100aa5760405162461bcd60e51b81526004016100a19061041d565b60405180910390fd5b60006100b88385018561037e565b9050801561014f576001600160a01b03871663095ea7b3336100da888a610442565b6040518363ffffffff1660e01b81526004016100f79291906103bd565b602060405180830381600087803b15801561011157600080fd5b505af1158015610125573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061014991906103a1565b506101d1565b60405163095ea7b360e01b81526001600160a01b0388169063095ea7b39061017d9033908a906004016103bd565b602060405180830381600087803b15801561019757600080fd5b505af11580156101ab573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101cf91906103a1565b505b507f439148f0bbc682ca079e46d6e2c2f0c1e3b820f1a291b069d8882abf8cf18dd9979650505050505050565b604051632e7ff4ef60e11b81526001600160a01b03841690635cffe9de9061022e903090869086906004016103df565b602060405180830381600087803b15801561024857600080fd5b505af115801561025c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061028091906103a1565b50505050565b80356001600160a01b038116811461029d57600080fd5b919050565b6000806000606084860312156102b6578283fd5b6102bf84610286565b92506102cd60208501610286565b9150604084013590509250925092565b60008060008060008060a087890312156102f5578182fd5b6102fe87610286565b955061030c60208801610286565b94506040870135935060608701359250608087013567ffffffffffffffff80821115610336578384fd5b818901915089601f830112610349578384fd5b813581811115610357578485fd5b8a6020828501011115610368578485fd5b6020830194508093505050509295509295509295565b60006020828403121561038f578081fd5b813561039a81610466565b9392505050565b6000602082840312156103b2578081fd5b815161039a81610466565b6001600160a01b03929092168252602082015260400190565b90815260200190565b6001600160a01b039384168152919092166020820152604081019190915260806060820181905260029082015261060f60f31b60a082015260c00190565b6020808252600b908201526a073656e64657220697320360ac1b604082015260600190565b6000821982111561046157634e487b7160e01b81526011600452602481fd5b500190565b801515811461047457600080fd5b5056fea2646970667358221220ec94c7691e912425cb7d5b0febfa4434cce9d4a1e75741c4810edef488e1f49a64736f6c63430008010033";
