/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";

import type { MockFlashBorrower } from "../MockFlashBorrower";

export class MockFlashBorrower__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<MockFlashBorrower> {
    return super.deploy(overrides || {}) as Promise<MockFlashBorrower>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): MockFlashBorrower {
    return super.attach(address) as MockFlashBorrower;
  }
  connect(signer: Signer): MockFlashBorrower__factory {
    return super.connect(signer) as MockFlashBorrower__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MockFlashBorrower {
    return new Contract(address, _abi, signerOrProvider) as MockFlashBorrower;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_lender",
        type: "address",
      },
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "borrow",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_initiator",
        type: "address",
      },
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_fees",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "onFlashLoan",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061089f806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c806323e30c8b1461003b5780635224372c1461006b575b600080fd5b61005560048036038101906100509190610435565b610087565b60405161006291906105e7565b60405180910390f35b610085600480360381019061008091906103e6565b6102b3565b005b60008073ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff1614156100f8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100ef9061066c565b60405180910390fd5b600083839050101561013f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101369061064c565b60405180910390fd5b6000838381019061015091906104c7565b905080156101f6578673ffffffffffffffffffffffffffffffffffffffff1663095ea7b333878961018191906106ae565b6040518363ffffffff1660e01b815260040161019e9291906105be565b602060405180830381600087803b1580156101b857600080fd5b505af11580156101cc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101f091906104f0565b50610285565b8673ffffffffffffffffffffffffffffffffffffffff1663095ea7b333886040518363ffffffff1660e01b81526004016102319291906105be565b602060405180830381600087803b15801561024b57600080fd5b505af115801561025f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061028391906104f0565b505b7f439148f0bbc682ca079e46d6e2c2f0c1e3b820f1a291b069d8882abf8cf18dd99150509695505050505050565b8273ffffffffffffffffffffffffffffffffffffffff16635cffe9de3084846040518463ffffffff1660e01b81526004016102f093929190610602565b602060405180830381600087803b15801561030a57600080fd5b505af115801561031e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061034291906104f0565b50505050565b60008135905061035781610824565b92915050565b60008135905061036c8161083b565b92915050565b6000815190506103818161083b565b92915050565b60008083601f84011261039957600080fd5b8235905067ffffffffffffffff8111156103b257600080fd5b6020830191508360018202830111156103ca57600080fd5b9250929050565b6000813590506103e081610852565b92915050565b6000806000606084860312156103fb57600080fd5b600061040986828701610348565b935050602061041a86828701610348565b925050604061042b868287016103d1565b9150509250925092565b60008060008060008060a0878903121561044e57600080fd5b600061045c89828a01610348565b965050602061046d89828a01610348565b955050604061047e89828a016103d1565b945050606061048f89828a016103d1565b935050608087013567ffffffffffffffff8111156104ac57600080fd5b6104b889828a01610387565b92509250509295509295509295565b6000602082840312156104d957600080fd5b60006104e78482850161035d565b91505092915050565b60006020828403121561050257600080fd5b600061051084828501610372565b91505092915050565b61052281610704565b82525050565b61053181610722565b82525050565b61054081610756565b82525050565b600061055360028361068c565b915061055e826107a9565b602082019050919050565b600061057660088361069d565b9150610581826107d2565b602082019050919050565b6000610599600b8361069d565b91506105a4826107fb565b602082019050919050565b6105b88161074c565b82525050565b60006040820190506105d36000830185610519565b6105e060208301846105af565b9392505050565b60006020820190506105fc6000830184610528565b92915050565b60006080820190506106176000830186610537565b6106246020830185610519565b61063160408301846105af565b818103606083015261064281610546565b9050949350505050565b6000602082019050818103600083015261066581610569565b9050919050565b600060208201905081810360008301526106858161058c565b9050919050565b600082825260208201905092915050565b600082825260208201905092915050565b60006106b98261074c565b91506106c48361074c565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156106f9576106f861077a565b5b828201905092915050565b600061070f8261072c565b9050919050565b60008115159050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600061076182610768565b9050919050565b60006107738261072c565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f3078000000000000000000000000000000000000000000000000000000000000600082015250565b7f64617461203c2030000000000000000000000000000000000000000000000000600082015250565b7f73656e6465722069732030000000000000000000000000000000000000000000600082015250565b61082d81610704565b811461083857600080fd5b50565b61084481610716565b811461084f57600080fd5b50565b61085b8161074c565b811461086657600080fd5b5056fea26469706673582212205863494bb3435bf8ba23a917371037a2c7db506252d6a33d8057f38785a79d4864736f6c63430008010033";
