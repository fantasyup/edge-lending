/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";

import type { MockFlashBorrower } from "../MockFlashBorrower";

export class MockFlashBorrower__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<MockFlashBorrower> {
    return super.deploy(overrides || {}) as Promise<MockFlashBorrower>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): MockFlashBorrower {
    return super.attach(address) as MockFlashBorrower;
  }
  connect(signer: Signer): MockFlashBorrower__factory {
    return super.connect(signer) as MockFlashBorrower__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MockFlashBorrower {
    return new Contract(address, _abi, signerOrProvider) as MockFlashBorrower;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_lender",
        type: "address",
      },
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "borrow",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "c__0x9f152e50",
        type: "bytes32",
      },
    ],
    name: "c_0x9f152e50",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_initiator",
        type: "address",
      },
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_fees",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "onFlashLoan",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610d3f806100206000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c806323e30c8b146100465780635224372c1461007657806359ddc8ae14610092575b600080fd5b610060600480360381019061005b9190610895565b6100ae565b60405161006d9190610a70565b60405180910390f35b610090600480360381019061008b9190610846565b610677565b005b6100ac60048036038101906100a79190610979565b610790565b005b60006100dc7f6ddcb7dd7c9ac48870d28ef34fc6daac6e593bd7ae70e6d746f629497bd0166860001b610790565b6101087fd9288659e51ab89e784f32eab7fb74225e02712500b3b71ba1585a36f31d30e160001b610790565b6101347f9b2ef3141e8482b6156ef20470e3e0a5358c92e6d3aad5576a6f0db1b07a4fbc60001b610790565b6101607fa0c1fed0735d90fef996aa487ec7d7db8dbbfd355a6b4eda0646c619314ff47260001b610790565b600073ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff1614156101d0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101c790610af5565b60405180910390fd5b6101fc7f2ecf6616a64a395f9a8507f2d475febe09ea4803e928ca207d04795680bd08d460001b610790565b6102287fa35901de0669aa51a5957ed7f0dbf20249016cb2e322d79834f0e7fbac8cddc560001b610790565b6102547f93a1869fcae671152aa608646d2f45e54d46f225223c423d0e46331285fc7ab760001b610790565b6102807fca5331472eb7c51e8a31147c7d4fc2809679d90ffc40a33720820a8bb6a44ec760001b610790565b60008383905010156102c7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102be90610ad5565b60405180910390fd5b6102f37f4e1e5dad97a42945e4719770017d0b177ef1686f87d00497c9179ddf71211d2860001b610790565b61031f7fa6c20c1e6cdecd6fb721f14eb0c131c20cceb0bba82653e9deb4b776f8e4d86a60001b610790565b61034b7f119dbffe8c9fa234494a1a497b7ff8035c8eaed282f15a5dee5b219dd89b10b360001b610790565b6000838381019061035c9190610927565b905061038a7f36fbda9a24caec62311719ef43d2491d4d742cc07f301a77d49cec2749f1600360001b610790565b6103b67f4e93b9c5770e2c87d79eb9a03f2e4c79ad054421e871a1a82e084e433a5e02ce60001b610790565b80156104de576103e87ff7a802bfac40a0ac1808fccf9aa5740f89fc2a8965dec18a527bb60dc30e255d60001b610790565b6104147f0100222ae3304736d5e786cad4c3b858633d3bf8fd3229dfa85d07293094183560001b610790565b6104407f991eb889f63e1742dd7eedc2a8cdd4a3cc816c32aa46b8775cd941c41285498b60001b610790565b8673ffffffffffffffffffffffffffffffffffffffff1663095ea7b33387896104699190610b37565b6040518363ffffffff1660e01b8152600401610486929190610a47565b602060405180830381600087803b1580156104a057600080fd5b505af11580156104b4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104d89190610950565b506105f1565b61050a7f98d943c36a3b7fd55ea6b099abe28870dcc417e68f08167a24a5bff183108a1460001b610790565b6105367fda5fc5a11ad8678fb78e3894faf182f1f1786b880d854dc820bb95ec320d08a760001b610790565b6105627fd0edf6c52fdcb226cf6250e49511c7c42d34c47041ef831644fcae5c41f6883360001b610790565b8673ffffffffffffffffffffffffffffffffffffffff1663095ea7b333886040518363ffffffff1660e01b815260040161059d929190610a47565b602060405180830381600087803b1580156105b757600080fd5b505af11580156105cb573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105ef9190610950565b505b61061d7f41b5de72601d075477007c1f97324a2ff8e234bfc85032976a4bb1218d3e96a660001b610790565b6106497f1a9ef4c1957bbc555c88d13c38af90a9bb4d49e2be917eed52bbb4184275515560001b610790565b7f439148f0bbc682ca079e46d6e2c2f0c1e3b820f1a291b069d8882abf8cf18dd99150509695505050505050565b6106a37fa8c34e66c86c20657dc009b72594a909fbc156286aa943cb236125e667dbb4f760001b610790565b6106cf7f1a10aeeec929dada08f0e9a454bc15cb1dab956dec3d6307335a096520545e1e60001b610790565b6106fb7f1940ccd4f8c1205467a6e0b729170b3e2a4b2f1f26fdec8392b02f43bd9685f960001b610790565b8273ffffffffffffffffffffffffffffffffffffffff16635cffe9de3084846040518463ffffffff1660e01b815260040161073893929190610a8b565b602060405180830381600087803b15801561075257600080fd5b505af1158015610766573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061078a9190610950565b50505050565b50565b6000813590506107a281610cad565b92915050565b6000813590506107b781610cc4565b92915050565b6000815190506107cc81610cc4565b92915050565b6000813590506107e181610cdb565b92915050565b60008083601f8401126107f957600080fd5b8235905067ffffffffffffffff81111561081257600080fd5b60208301915083600182028301111561082a57600080fd5b9250929050565b60008135905061084081610cf2565b92915050565b60008060006060848603121561085b57600080fd5b600061086986828701610793565b935050602061087a86828701610793565b925050604061088b86828701610831565b9150509250925092565b60008060008060008060a087890312156108ae57600080fd5b60006108bc89828a01610793565b96505060206108cd89828a01610793565b95505060406108de89828a01610831565b94505060606108ef89828a01610831565b935050608087013567ffffffffffffffff81111561090c57600080fd5b61091889828a016107e7565b92509250509295509295509295565b60006020828403121561093957600080fd5b6000610947848285016107a8565b91505092915050565b60006020828403121561096257600080fd5b6000610970848285016107bd565b91505092915050565b60006020828403121561098b57600080fd5b6000610999848285016107d2565b91505092915050565b6109ab81610b8d565b82525050565b6109ba81610bab565b82525050565b6109c981610bdf565b82525050565b60006109dc600283610b15565b91506109e782610c32565b602082019050919050565b60006109ff600883610b26565b9150610a0a82610c5b565b602082019050919050565b6000610a22600b83610b26565b9150610a2d82610c84565b602082019050919050565b610a4181610bd5565b82525050565b6000604082019050610a5c60008301856109a2565b610a696020830184610a38565b9392505050565b6000602082019050610a8560008301846109b1565b92915050565b6000608082019050610aa060008301866109c0565b610aad60208301856109a2565b610aba6040830184610a38565b8181036060830152610acb816109cf565b9050949350505050565b60006020820190508181036000830152610aee816109f2565b9050919050565b60006020820190508181036000830152610b0e81610a15565b9050919050565b600082825260208201905092915050565b600082825260208201905092915050565b6000610b4282610bd5565b9150610b4d83610bd5565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610b8257610b81610c03565b5b828201905092915050565b6000610b9882610bb5565b9050919050565b60008115159050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000610bea82610bf1565b9050919050565b6000610bfc82610bb5565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f3078000000000000000000000000000000000000000000000000000000000000600082015250565b7f64617461203c2030000000000000000000000000000000000000000000000000600082015250565b7f73656e6465722069732030000000000000000000000000000000000000000000600082015250565b610cb681610b8d565b8114610cc157600080fd5b50565b610ccd81610b9f565b8114610cd857600080fd5b50565b610ce481610bab565b8114610cef57600080fd5b50565b610cfb81610bd5565b8114610d0657600080fd5b5056fea2646970667358221220a68a9d38defea780ef60be0277b97e4c29d97e52bb691c2fecf16d2ca56f543464736f6c63430008010033";
