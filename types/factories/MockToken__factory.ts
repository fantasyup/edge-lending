/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Signer,
  BigNumberish,
  Contract,
  ContractFactory,
  Overrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";

import type { MockToken } from "../MockToken";

export class MockToken__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    __decimals: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<MockToken> {
    return super.deploy(__decimals, overrides || {}) as Promise<MockToken>;
  }
  getDeployTransaction(
    __decimals: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(__decimals, overrides || {});
  }
  attach(address: string): MockToken {
    return super.attach(address) as MockToken;
  }
  connect(signer: Signer): MockToken__factory {
    return super.connect(signer) as MockToken__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MockToken {
    return new Contract(address, _abi, signerOrProvider) as MockToken;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "uint8",
        name: "__decimals",
        type: "uint8",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_from",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "setBalanceTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162000e9b38038062000e9b83398101604081905262000034916200015f565b604051806040016040528060048152602001634d6f636b60e01b815250604051806040016040528060038152602001621350d560ea1b815250816003908051906020019062000085929190620000b9565b5080516200009b906004906020840190620000b9565b50506005805460ff191660ff939093169290921790915550620001c6565b828054620000c79062000189565b90600052602060002090601f016020900481019282620000eb576000855562000136565b82601f106200010657805160ff191683800117855562000136565b8280016001018555821562000136579182015b828111156200013657825182559160200191906001019062000119565b506200014492915062000148565b5090565b5b8082111562000144576000815560010162000149565b60006020828403121562000171578081fd5b815160ff8116811462000182578182fd5b9392505050565b6002810460018216806200019e57607f821691505b60208210811415620001c057634e487b7160e01b600052602260045260246000fd5b50919050565b610cc580620001d66000396000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c806370a082311161008c578063a2b0a1c711610066578063a2b0a1c71461017d578063a457c2d7146101c0578063a9059cbb146101d3578063dd62ed3e146101e6576100ea565b806370a082311461019257806395d89b41146101a55780639dc29fac146101ad576100ea565b806323b872dd116100c857806323b872dd14610142578063313ce56714610155578063395093511461016a57806340c10f191461017d576100ea565b806306fdde03146100ef578063095ea7b31461010d57806318160ddd1461012d575b600080fd5b6100f76101f9565b604051610104919061090a565b60405180910390f35b61012061011b3660046108d6565b61028b565b60405161010491906108ff565b6101356102a8565b6040516101049190610bf8565b61012061015036600461089b565b6102ae565b61015d61034e565b6040516101049190610c01565b6101206101783660046108d6565b610357565b61019061018b3660046108d6565b6103a6565b005b6101356101a0366004610848565b6103b4565b6100f76103d3565b6101906101bb3660046108d6565b6103e2565b6101206101ce3660046108d6565b6103ec565b6101206101e13660046108d6565b610467565b6101356101f4366004610869565b61047b565b60606003805461020890610c3e565b80601f016020809104026020016040519081016040528092919081815260200182805461023490610c3e565b80156102815780601f1061025657610100808354040283529160200191610281565b820191906000526020600020905b81548152906001019060200180831161026457829003601f168201915b5050505050905090565b600061029f6102986104a6565b84846104aa565b50600192915050565b60025490565b60006102bb84848461055e565b6001600160a01b0384166000908152600160205260408120816102dc6104a6565b6001600160a01b03166001600160a01b03168152602001908152602001600020549050828110156103285760405162461bcd60e51b815260040161031f90610a6a565b60405180910390fd5b610343856103346104a6565b61033e8685610c27565b6104aa565b506001949350505050565b60055460ff1690565b600061029f6103646104a6565b8484600160006103726104a6565b6001600160a01b03908116825260208083019390935260409182016000908120918b168152925290205461033e9190610c0f565b6103b08282610686565b5050565b6001600160a01b0381166000908152602081905260409020545b919050565b60606004805461020890610c3e565b6103b08282610746565b600080600160006103fb6104a6565b6001600160a01b03908116825260208083019390935260409182016000908120918816815292529020549050828110156104475760405162461bcd60e51b815260040161031f90610b7c565b61045d6104526104a6565b8561033e8685610c27565b5060019392505050565b600061029f6104746104a6565b848461055e565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b3390565b6001600160a01b0383166104d05760405162461bcd60e51b815260040161031f90610b38565b6001600160a01b0382166104f65760405162461bcd60e51b815260040161031f906109e2565b6001600160a01b0380841660008181526001602090815260408083209487168084529490915290819020849055517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92590610551908590610bf8565b60405180910390a3505050565b6001600160a01b0383166105845760405162461bcd60e51b815260040161031f90610af3565b6001600160a01b0382166105aa5760405162461bcd60e51b815260040161031f9061095d565b6105b583838361082c565b6001600160a01b038316600090815260208190526040902054818110156105ee5760405162461bcd60e51b815260040161031f90610a24565b6105f88282610c27565b6001600160a01b03808616600090815260208190526040808220939093559085168152908120805484929061062e908490610c0f565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516106789190610bf8565b60405180910390a350505050565b6001600160a01b0382166106ac5760405162461bcd60e51b815260040161031f90610bc1565b6106b86000838361082c565b80600260008282546106ca9190610c0f565b90915550506001600160a01b038216600090815260208190526040812080548392906106f7908490610c0f565b90915550506040516001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9061073a908590610bf8565b60405180910390a35050565b6001600160a01b03821661076c5760405162461bcd60e51b815260040161031f90610ab2565b6107788260008361082c565b6001600160a01b038216600090815260208190526040902054818110156107b15760405162461bcd60e51b815260040161031f906109a0565b6107bb8282610c27565b6001600160a01b038416600090815260208190526040812091909155600280548492906107e9908490610c27565b90915550506040516000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90610551908690610bf8565b505050565b80356001600160a01b03811681146103ce57600080fd5b600060208284031215610859578081fd5b61086282610831565b9392505050565b6000806040838503121561087b578081fd5b61088483610831565b915061089260208401610831565b90509250929050565b6000806000606084860312156108af578081fd5b6108b884610831565b92506108c660208501610831565b9150604084013590509250925092565b600080604083850312156108e8578182fd5b6108f183610831565b946020939093013593505050565b901515815260200190565b6000602080835283518082850152825b818110156109365785810183015185820160400152820161091a565b818111156109475783604083870101525b50601f01601f1916929092016040019392505050565b60208082526023908201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260408201526265737360e81b606082015260800190565b60208082526022908201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604082015261636560f01b606082015260800190565b60208082526022908201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604082015261737360f01b606082015260800190565b60208082526026908201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604082015265616c616e636560d01b606082015260800190565b60208082526028908201527f45524332303a207472616e7366657220616d6f756e74206578636565647320616040820152676c6c6f77616e636560c01b606082015260800190565b60208082526021908201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736040820152607360f81b606082015260800190565b60208082526025908201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604082015264647265737360d81b606082015260800190565b60208082526024908201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646040820152637265737360e01b606082015260800190565b60208082526025908201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604082015264207a65726f60d81b606082015260800190565b6020808252601f908201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604082015260600190565b90815260200190565b60ff91909116815260200190565b60008219821115610c2257610c22610c79565b500190565b600082821015610c3957610c39610c79565b500390565b600281046001821680610c5257607f821691505b60208210811415610c7357634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fdfea26469706673582212208c901877f9fd2862ac726f94e174571a57a4e68d48d487313e3d3cc74510b5f664736f6c63430008010033";
